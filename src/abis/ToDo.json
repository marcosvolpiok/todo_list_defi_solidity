{
  "contractName": "ToDo",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tasks",
      "outputs": [
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "user",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_user",
          "type": "string"
        }
      ],
      "name": "createTask",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_id",
          "type": "uint8"
        }
      ],
      "name": "checkTask",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "cleanTasks",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTasks",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "user",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "status",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "internalType": "struct ToDo.Task[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTasksByOwner",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "user",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "status",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "internalType": "struct ToDo.Task[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_id\",\"type\":\"uint8\"}],\"name\":\"checkTask\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"cleanTasks\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_user\",\"type\":\"string\"}],\"name\":\"createTask\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTasks\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"user\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"internalType\":\"struct ToDo.Task[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTasksByOwner\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"user\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"internalType\":\"struct ToDo.Task[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tasks\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"user\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/src/contracts/ToDo.sol\":\"ToDo\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/src/contracts/ToDo.sol\":{\"keccak256\":\"0x68e2f5bec28356e7eac6bc78dd6cebf6deeba0e8a6def1f7d001a6dc842ea5be\",\"urls\":[\"bzz-raw://19971d4fa7057967883f10a6aa02aa459987537c061655618c9db16c11e96d21\",\"dweb:/ipfs/QmYBQwsPs9mVMyfAk3kj5VSjhbq93Bk8T1gPVPAnVFnMJk\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610f75806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806304a87e3814610067578063292a4585146100855780632e99a9e5146100a15780638d977672146100ab578063e46ff648146100de578063e65141e4146100fc575b600080fd5b61006f610118565b60405161007c9190610d28565b60405180910390f35b61009f600480360361009a9190810190610ac9565b61032c565b005b6100a961043b565b005b6100c560048036036100c09190810190610b35565b61044a565b6040516100d59493929190610d4a565b60405180910390f35b6100e66105e4565b6040516100f39190610d28565b60405180910390f35b61011660048036036101119190810190610b5e565b610843565b005b60606000805480602002602001604051908101604052809291908181526020016000905b828210156103235783829060005260206000209060030201604051806080016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156101f85780601f106101cd576101008083540402835291602001916101f8565b820191906000526020600020905b8154815290600101906020018083116101db57829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561029a5780601f1061026f5761010080835404028352916020019161029a565b820191906000526020600020905b81548152906001019060200180831161027d57829003601f168201915b505050505081526020016002820160009054906101000a900460ff161515151581526020016002820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250508152602001906001019061013c565b50505050905090565b600060405180608001604052808481526020018381526020016000151581526020013373ffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050906001820390600052602060002090600302016000909192909190915060008201518160000190805190602001906103af929190610880565b5060208201518160010190805190602001906103cc929190610880565b5060408201518160020160006101000a81548160ff02191690831515021790555060608201518160020160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b6000806104489190610900565b565b6000818154811061045757fe5b9060005260206000209060030201600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105035780601f106104d857610100808354040283529160200191610503565b820191906000526020600020905b8154815290600101906020018083116104e657829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105a15780601f10610576576101008083540402835291602001916105a1565b820191906000526020600020905b81548152906001019060200180831161058457829003601f168201915b5050505050908060020160009054906101000a900460ff16908060020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b60608060008054905060405190808252806020026020018201604052801561062657816020015b610613610924565b81526020019060019003908161060b5790505b50905060008090505b60008054905081101561083b576000818154811061064957fe5b9060005260206000209060030201604051806080016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106fb5780601f106106d0576101008083540402835291602001916106fb565b820191906000526020600020905b8154815290600101906020018083116106de57829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561079d5780601f106107725761010080835404028352916020019161079d565b820191906000526020600020905b81548152906001019060200180831161078057829003601f168201915b505050505081526020016002820160009054906101000a900460ff161515151581526020016002820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505082828151811061082357fe5b6020026020010181905250808060010191505061062f565b508091505090565b600160008260ff168154811061085557fe5b906000526020600020906003020160020160006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106108c157805160ff19168380011785556108ef565b828001600101855582156108ef579182015b828111156108ee5782518255916020019190600101906108d3565b5b5090506108fc9190610964565b5090565b50805460008255600302906000526020600020908101906109219190610989565b50565b60405180608001604052806060815260200160608152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b61098691905b8082111561098257600081600090555060010161096a565b5090565b90565b610a0091905b808211156109fc57600080820160006109a89190610a03565b6001820160006109b89190610a03565b6002820160006101000a81549060ff02191690556002820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555060030161098f565b5090565b90565b50805460018160011615610100020316600290046000825580601f10610a295750610a48565b601f016020900490600052602060002090810190610a479190610964565b5b50565b600082601f830112610a5c57600080fd5b8135610a6f610a6a82610dca565b610d9d565b91508082526020830160208301858383011115610a8b57600080fd5b610a96838284610eb1565b50505092915050565b600081359050610aae81610f04565b92915050565b600081359050610ac381610f1b565b92915050565b60008060408385031215610adc57600080fd5b600083013567ffffffffffffffff811115610af657600080fd5b610b0285828601610a4b565b925050602083013567ffffffffffffffff811115610b1f57600080fd5b610b2b85828601610a4b565b9150509250929050565b600060208284031215610b4757600080fd5b6000610b5584828501610a9f565b91505092915050565b600060208284031215610b7057600080fd5b6000610b7e84828501610ab4565b91505092915050565b6000610b938383610cbe565b905092915050565b610ba481610e5c565b82525050565b610bb381610e5c565b82525050565b6000610bc482610e06565b610bce8185610e29565b935083602082028501610be085610df6565b8060005b85811015610c1c5784840389528151610bfd8582610b87565b9450610c0883610e1c565b925060208a01995050600181019050610be4565b50829750879550505050505092915050565b610c3781610e6e565b82525050565b610c4681610e6e565b82525050565b6000610c5782610e11565b610c618185610e3a565b9350610c71818560208601610ec0565b610c7a81610ef3565b840191505092915050565b6000610c9082610e11565b610c9a8185610e4b565b9350610caa818560208601610ec0565b610cb381610ef3565b840191505092915050565b60006080830160008301518482036000860152610cdb8282610c4c565b91505060208301518482036020860152610cf58282610c4c565b9150506040830151610d0a6040860182610c2e565b506060830151610d1d6060860182610b9b565b508091505092915050565b60006020820190508181036000830152610d428184610bb9565b905092915050565b60006080820190508181036000830152610d648187610c85565b90508181036020830152610d788186610c85565b9050610d876040830185610c3d565b610d946060830184610baa565b95945050505050565b6000604051905081810181811067ffffffffffffffff82111715610dc057600080fd5b8060405250919050565b600067ffffffffffffffff821115610de157600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610e6782610e7a565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b83811015610ede578082015181840152602081019050610ec3565b83811115610eed576000848401525b50505050565b6000601f19601f8301169050919050565b610f0d81610e9a565b8114610f1857600080fd5b50565b610f2481610ea4565b8114610f2f57600080fd5b5056fea365627a7a72315820c6c68775cee0344e052f9fd38a8cfe8b2c5609fc70afd0c96f69143aba0a18f06c6578706572696d656e74616cf564736f6c63430005100040",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c806304a87e3814610067578063292a4585146100855780632e99a9e5146100a15780638d977672146100ab578063e46ff648146100de578063e65141e4146100fc575b600080fd5b61006f610118565b60405161007c9190610d28565b60405180910390f35b61009f600480360361009a9190810190610ac9565b61032c565b005b6100a961043b565b005b6100c560048036036100c09190810190610b35565b61044a565b6040516100d59493929190610d4a565b60405180910390f35b6100e66105e4565b6040516100f39190610d28565b60405180910390f35b61011660048036036101119190810190610b5e565b610843565b005b60606000805480602002602001604051908101604052809291908181526020016000905b828210156103235783829060005260206000209060030201604051806080016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156101f85780601f106101cd576101008083540402835291602001916101f8565b820191906000526020600020905b8154815290600101906020018083116101db57829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561029a5780601f1061026f5761010080835404028352916020019161029a565b820191906000526020600020905b81548152906001019060200180831161027d57829003601f168201915b505050505081526020016002820160009054906101000a900460ff161515151581526020016002820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250508152602001906001019061013c565b50505050905090565b600060405180608001604052808481526020018381526020016000151581526020013373ffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050906001820390600052602060002090600302016000909192909190915060008201518160000190805190602001906103af929190610880565b5060208201518160010190805190602001906103cc929190610880565b5060408201518160020160006101000a81548160ff02191690831515021790555060608201518160020160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b6000806104489190610900565b565b6000818154811061045757fe5b9060005260206000209060030201600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105035780601f106104d857610100808354040283529160200191610503565b820191906000526020600020905b8154815290600101906020018083116104e657829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105a15780601f10610576576101008083540402835291602001916105a1565b820191906000526020600020905b81548152906001019060200180831161058457829003601f168201915b5050505050908060020160009054906101000a900460ff16908060020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b60608060008054905060405190808252806020026020018201604052801561062657816020015b610613610924565b81526020019060019003908161060b5790505b50905060008090505b60008054905081101561083b576000818154811061064957fe5b9060005260206000209060030201604051806080016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106fb5780601f106106d0576101008083540402835291602001916106fb565b820191906000526020600020905b8154815290600101906020018083116106de57829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561079d5780601f106107725761010080835404028352916020019161079d565b820191906000526020600020905b81548152906001019060200180831161078057829003601f168201915b505050505081526020016002820160009054906101000a900460ff161515151581526020016002820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505082828151811061082357fe5b6020026020010181905250808060010191505061062f565b508091505090565b600160008260ff168154811061085557fe5b906000526020600020906003020160020160006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106108c157805160ff19168380011785556108ef565b828001600101855582156108ef579182015b828111156108ee5782518255916020019190600101906108d3565b5b5090506108fc9190610964565b5090565b50805460008255600302906000526020600020908101906109219190610989565b50565b60405180608001604052806060815260200160608152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b61098691905b8082111561098257600081600090555060010161096a565b5090565b90565b610a0091905b808211156109fc57600080820160006109a89190610a03565b6001820160006109b89190610a03565b6002820160006101000a81549060ff02191690556002820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555060030161098f565b5090565b90565b50805460018160011615610100020316600290046000825580601f10610a295750610a48565b601f016020900490600052602060002090810190610a479190610964565b5b50565b600082601f830112610a5c57600080fd5b8135610a6f610a6a82610dca565b610d9d565b91508082526020830160208301858383011115610a8b57600080fd5b610a96838284610eb1565b50505092915050565b600081359050610aae81610f04565b92915050565b600081359050610ac381610f1b565b92915050565b60008060408385031215610adc57600080fd5b600083013567ffffffffffffffff811115610af657600080fd5b610b0285828601610a4b565b925050602083013567ffffffffffffffff811115610b1f57600080fd5b610b2b85828601610a4b565b9150509250929050565b600060208284031215610b4757600080fd5b6000610b5584828501610a9f565b91505092915050565b600060208284031215610b7057600080fd5b6000610b7e84828501610ab4565b91505092915050565b6000610b938383610cbe565b905092915050565b610ba481610e5c565b82525050565b610bb381610e5c565b82525050565b6000610bc482610e06565b610bce8185610e29565b935083602082028501610be085610df6565b8060005b85811015610c1c5784840389528151610bfd8582610b87565b9450610c0883610e1c565b925060208a01995050600181019050610be4565b50829750879550505050505092915050565b610c3781610e6e565b82525050565b610c4681610e6e565b82525050565b6000610c5782610e11565b610c618185610e3a565b9350610c71818560208601610ec0565b610c7a81610ef3565b840191505092915050565b6000610c9082610e11565b610c9a8185610e4b565b9350610caa818560208601610ec0565b610cb381610ef3565b840191505092915050565b60006080830160008301518482036000860152610cdb8282610c4c565b91505060208301518482036020860152610cf58282610c4c565b9150506040830151610d0a6040860182610c2e565b506060830151610d1d6060860182610b9b565b508091505092915050565b60006020820190508181036000830152610d428184610bb9565b905092915050565b60006080820190508181036000830152610d648187610c85565b90508181036020830152610d788186610c85565b9050610d876040830185610c3d565b610d946060830184610baa565b95945050505050565b6000604051905081810181811067ffffffffffffffff82111715610dc057600080fd5b8060405250919050565b600067ffffffffffffffff821115610de157600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610e6782610e7a565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b83811015610ede578082015181840152602081019050610ec3565b83811115610eed576000848401525b50505050565b6000601f19601f8301169050919050565b610f0d81610e9a565b8114610f1857600080fd5b50565b610f2481610ea4565b8114610f2f57600080fd5b5056fea365627a7a72315820c6c68775cee0344e052f9fd38a8cfe8b2c5609fc70afd0c96f69143aba0a18f06c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "35:903:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;35:903:0;;;;;;;",
  "deployedSourceMap": "35:903:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;35:903:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;456:78;;;:::i;:::-;;;;;;;;;;;;;;;;175:143;;;;;;;;;;;;;;;;:::i;:::-;;398:52;;;:::i;:::-;;151:19;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;538:394;;;:::i;:::-;;;;;;;;;;;;;;;;322:72;;;;;;;;;;;;;;;;:::i;:::-;;456:78;496:13;524:5;517:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;456:78;:::o;175:143::-;257:5;268:44;;;;;;;;273:12;268:44;;;;287:5;268:44;;;;294:5;268:44;;;;;;301:10;268:44;;;;;257:56;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;257:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;175:143;;:::o;398:52::-;440:5;;433:12;;;;:::i;:::-;398:52::o;151:19::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;538:394::-;587:13;608:20;642:5;:12;;;;631:24;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;608:47;;690:6;699:1;690:10;;685:223;706:5;:12;;;;702:1;:16;685:223;;;786:5;792:1;786:8;;;;;;;;;;;;;;;;;;774:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:6;781:1;774:9;;;;;;;;;;;;;:20;;;;720:3;;;;;;;685:223;;;;921:6;914:13;;;538:394;:::o;322:72::-;385:4;365:5;371:3;365:10;;;;;;;;;;;;;;;;;;;;:17;;;:24;;;;;;;;;;;;;;;;;;322:72;:::o;35:903::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;6:442:-1:-;;108:3;101:4;93:6;89:17;85:27;75:2;;126:1;123;116:12;75:2;163:6;150:20;185:65;200:49;242:6;200:49;;;185:65;;;176:74;;270:6;263:5;256:21;306:4;298:6;294:17;339:4;332:5;328:16;374:3;365:6;360:3;356:16;353:25;350:2;;;391:1;388;381:12;350:2;401:41;435:6;430:3;425;401:41;;;68:380;;;;;;;;456:130;;536:6;523:20;514:29;;548:33;575:5;548:33;;;508:78;;;;;593:126;;671:6;658:20;649:29;;683:31;708:5;683:31;;;643:76;;;;;726:578;;;867:2;855:9;846:7;842:23;838:32;835:2;;;883:1;880;873:12;835:2;946:1;935:9;931:17;918:31;969:18;961:6;958:30;955:2;;;1001:1;998;991:12;955:2;1021:63;1076:7;1067:6;1056:9;1052:22;1021:63;;;1011:73;;897:193;1149:2;1138:9;1134:18;1121:32;1173:18;1165:6;1162:30;1159:2;;;1205:1;1202;1195:12;1159:2;1225:63;1280:7;1271:6;1260:9;1256:22;1225:63;;;1215:73;;1100:194;829:475;;;;;;1311:241;;1415:2;1403:9;1394:7;1390:23;1386:32;1383:2;;;1431:1;1428;1421:12;1383:2;1466:1;1483:53;1528:7;1519:6;1508:9;1504:22;1483:53;;;1473:63;;1445:97;1377:175;;;;;1559:237;;1661:2;1649:9;1640:7;1636:23;1632:32;1629:2;;;1677:1;1674;1667:12;1629:2;1712:1;1729:51;1772:7;1763:6;1752:9;1748:22;1729:51;;;1719:61;;1691:95;1623:173;;;;;1804:221;;1937:82;2015:3;2007:6;1937:82;;;1923:96;;1916:109;;;;;2033:103;2106:24;2124:5;2106:24;;;2101:3;2094:37;2088:48;;;2143:113;2226:24;2244:5;2226:24;;;2221:3;2214:37;2208:48;;;2312:976;;2489:70;2553:5;2489:70;;;2572:102;2667:6;2662:3;2572:102;;;2565:109;;2697:3;2739:4;2731:6;2727:17;2722:3;2718:27;2766:72;2832:5;2766:72;;;2858:7;2886:1;2871:378;2896:6;2893:1;2890:13;2871:378;;;2958:9;2952:4;2948:20;2943:3;2936:33;3003:6;2997:13;3025:96;3116:4;3101:13;3025:96;;;3017:104;;3138:76;3207:6;3138:76;;;3128:86;;3237:4;3232:3;3228:14;3221:21;;2928:321;2918:1;2915;2911:9;2906:14;;2871:378;;;2875:14;3262:4;3255:11;;3279:3;3272:10;;2468:820;;;;;;;;;;3296:94;3363:21;3378:5;3363:21;;;3358:3;3351:34;3345:45;;;3397:104;3474:21;3489:5;3474:21;;;3469:3;3462:34;3456:45;;;3508:319;;3606:35;3635:5;3606:35;;;3653:61;3707:6;3702:3;3653:61;;;3646:68;;3719:52;3764:6;3759:3;3752:4;3745:5;3741:16;3719:52;;;3792:29;3814:6;3792:29;;;3787:3;3783:39;3776:46;;3586:241;;;;;;3834:339;;3942:35;3971:5;3942:35;;;3989:71;4053:6;4048:3;3989:71;;;3982:78;;4065:52;4110:6;4105:3;4098:4;4091:5;4087:16;4065:52;;;4138:29;4160:6;4138:29;;;4133:3;4129:39;4122:46;;3922:251;;;;;;4223:927;;4350:4;4345:3;4341:14;4440:4;4433:5;4429:16;4423:23;4492:3;4486:4;4482:14;4475:4;4470:3;4466:14;4459:38;4512:69;4576:4;4562:12;4512:69;;;4504:77;;4370:223;4666:4;4659:5;4655:16;4649:23;4718:3;4712:4;4708:14;4701:4;4696:3;4692:14;4685:38;4738:69;4802:4;4788:12;4738:69;;;4730:77;;4603:216;4894:4;4887:5;4883:16;4877:23;4906:57;4957:4;4952:3;4948:14;4934:12;4906:57;;;4829:140;5043:4;5036:5;5032:16;5026:23;5055:63;5112:4;5107:3;5103:14;5089:12;5055:63;;;4979:145;5141:4;5134:11;;4323:827;;;;;;5157:425;;5357:2;5346:9;5342:18;5334:26;;5407:9;5401:4;5397:20;5393:1;5382:9;5378:17;5371:47;5432:140;5567:4;5558:6;5432:140;;;5424:148;;5328:254;;;;;5589:695;;5817:3;5806:9;5802:19;5794:27;;5868:9;5862:4;5858:20;5854:1;5843:9;5839:17;5832:47;5893:74;5962:4;5953:6;5893:74;;;5885:82;;6015:9;6009:4;6005:20;6000:2;5989:9;5985:18;5978:48;6040:74;6109:4;6100:6;6040:74;;;6032:82;;6125:66;6187:2;6176:9;6172:18;6163:6;6125:66;;;6202:72;6270:2;6259:9;6255:18;6246:6;6202:72;;;5788:496;;;;;;;;6291:256;;6353:2;6347:9;6337:19;;6391:4;6383:6;6379:17;6490:6;6478:10;6475:22;6454:18;6442:10;6439:34;6436:62;6433:2;;;6511:1;6508;6501:12;6433:2;6531:10;6527:2;6520:22;6331:216;;;;;6554:322;;6698:18;6690:6;6687:30;6684:2;;;6730:1;6727;6720:12;6684:2;6797:4;6793:9;6786:4;6778:6;6774:17;6770:33;6762:41;;6861:4;6855;6851:15;6843:23;;6621:255;;;;6883:167;;6985:3;6977:11;;7023:4;7018:3;7014:14;7006:22;;6971:79;;;;7057:153;;7182:5;7176:12;7166:22;;7147:63;;;;7217:118;;7307:5;7301:12;7291:22;;7272:63;;;;7342:124;;7456:4;7451:3;7447:14;7439:22;;7433:33;;;;7474:194;;7620:6;7615:3;7608:19;7657:4;7652:3;7648:14;7633:29;;7601:67;;;;;7677:153;;7782:6;7777:3;7770:19;7819:4;7814:3;7810:14;7795:29;;7763:67;;;;;7839:163;;7954:6;7949:3;7942:19;7991:4;7986:3;7982:14;7967:29;;7935:67;;;;;8010:91;;8072:24;8090:5;8072:24;;;8061:35;;8055:46;;;;8108:85;;8181:5;8174:13;8167:21;8156:32;;8150:43;;;;8200:121;;8273:42;8266:5;8262:54;8251:65;;8245:76;;;;8328:72;;8390:5;8379:16;;8373:27;;;;8407:81;;8478:4;8471:5;8467:16;8456:27;;8450:38;;;;8496:145;8577:6;8572:3;8567;8554:30;8633:1;8624:6;8619:3;8615:16;8608:27;8547:94;;;;8650:268;8715:1;8722:101;8736:6;8733:1;8730:13;8722:101;;;8812:1;8807:3;8803:11;8797:18;8793:1;8788:3;8784:11;8777:39;8758:2;8755:1;8751:10;8746:15;;8722:101;;;8838:6;8835:1;8832:13;8829:2;;;8903:1;8894:6;8889:3;8885:16;8878:27;8829:2;8699:219;;;;;8926:97;;9014:2;9010:7;9005:2;8998:5;8994:14;8990:28;8980:38;;8974:49;;;;9031:117;9100:24;9118:5;9100:24;;;9093:5;9090:35;9080:2;;9139:1;9136;9129:12;9080:2;9074:74;;9155:113;9222:22;9238:5;9222:22;;;9215:5;9212:33;9202:2;;9259:1;9256;9249:12;9202:2;9196:72;",
  "source": "pragma experimental ABIEncoderV2;\n\ncontract ToDo {\n  struct Task {\n    string description;\n    string user;\n    bool status;\n    address owner;\n  }\n\n  Task[] public tasks;\n\n  function createTask(string memory _description, string memory _user) public {\n    tasks.push(Task(_description, _user, false, msg.sender));\n  }\n\n  function checkTask(uint8 _id) public {\n    tasks[_id].status = true;\n  }\n\n  function cleanTasks() public {\n    delete tasks;\n  }\n  \n  function getTasks() public view returns(Task[] memory) {\n    return tasks;\n  }\n\n  function getTasksByOwner() external view returns(Task[] memory) {\n    Task[] memory result = new Task[](tasks.length);\n    //uint counter = 0;\n    for (uint i = 0; i < tasks.length; i++) {\n      //if (owner == tasks[i].owner) {\n        result[i] = tasks[i];\n        //Task memory result = tasks[i];\n\n\n        //result.push(tasks[i]);\n        //counter++;\n      //}\n    }\n\n    return result;\n  }\n\n  \n}",
  "sourcePath": "/home/hayek/proyectos_personales/todo_list_defi/src/contracts/ToDo.sol",
  "ast": {
    "absolutePath": "project:/src/contracts/ToDo.sol",
    "exportedSymbols": {
      "ToDo": [
        104
      ]
    },
    "id": 105,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:33:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 104,
        "linearizedBaseContracts": [
          104
        ],
        "name": "ToDo",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "ToDo.Task",
            "id": 10,
            "members": [
              {
                "constant": false,
                "id": 3,
                "name": "description",
                "nodeType": "VariableDeclaration",
                "scope": 10,
                "src": "71:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 2,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "71:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 5,
                "name": "user",
                "nodeType": "VariableDeclaration",
                "scope": 10,
                "src": "95:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 4,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "95:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7,
                "name": "status",
                "nodeType": "VariableDeclaration",
                "scope": 10,
                "src": "112:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 6,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "112:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9,
                "name": "owner",
                "nodeType": "VariableDeclaration",
                "scope": 10,
                "src": "129:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 8,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "129:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Task",
            "nodeType": "StructDefinition",
            "scope": 104,
            "src": "53:94:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 13,
            "name": "tasks",
            "nodeType": "VariableDeclaration",
            "scope": 104,
            "src": "151:19:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Task_$10_storage_$dyn_storage",
              "typeString": "struct ToDo.Task[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 11,
                "name": "Task",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 10,
                "src": "151:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Task_$10_storage_ptr",
                  "typeString": "struct ToDo.Task"
                }
              },
              "id": 12,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "151:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Task_$10_storage_$dyn_storage_ptr",
                "typeString": "struct ToDo.Task[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 32,
              "nodeType": "Block",
              "src": "251:67:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 24,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "273:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 25,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "287:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 26,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "294:5:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 27,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 119,
                              "src": "301:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 28,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "301:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 23,
                          "name": "Task",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "268:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Task_$10_storage_ptr_$",
                            "typeString": "type(struct ToDo.Task storage pointer)"
                          }
                        },
                        "id": 29,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "268:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$10_memory",
                          "typeString": "struct ToDo.Task memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Task_$10_memory",
                          "typeString": "struct ToDo.Task memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 20,
                        "name": "tasks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "257:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Task_$10_storage_$dyn_storage",
                          "typeString": "struct ToDo.Task storage ref[] storage ref"
                        }
                      },
                      "id": 22,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "257:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Task_$10_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct ToDo.Task storage ref) returns (uint256)"
                      }
                    },
                    "id": 30,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "257:56:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 31,
                  "nodeType": "ExpressionStatement",
                  "src": "257:56:0"
                }
              ]
            },
            "documentation": null,
            "id": 33,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createTask",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "name": "_description",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "195:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "195:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "223:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "223:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "194:49:0"
            },
            "returnParameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "251:0:0"
            },
            "scope": 104,
            "src": "175:143:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 45,
              "nodeType": "Block",
              "src": "359:35:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 43,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 38,
                          "name": "tasks",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "365:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Task_$10_storage_$dyn_storage",
                            "typeString": "struct ToDo.Task storage ref[] storage ref"
                          }
                        },
                        "id": 40,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 39,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35,
                          "src": "371:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "365:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$10_storage",
                          "typeString": "struct ToDo.Task storage ref"
                        }
                      },
                      "id": 41,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7,
                      "src": "365:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 42,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "385:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "365:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44,
                  "nodeType": "ExpressionStatement",
                  "src": "365:24:0"
                }
              ]
            },
            "documentation": null,
            "id": 46,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkTask",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 46,
                  "src": "341:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "341:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "340:11:0"
            },
            "returnParameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "359:0:0"
            },
            "scope": 104,
            "src": "322:72:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 52,
              "nodeType": "Block",
              "src": "427:23:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "433:12:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 49,
                      "name": "tasks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "440:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Task_$10_storage_$dyn_storage",
                        "typeString": "struct ToDo.Task storage ref[] storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
                  "src": "433:12:0"
                }
              ]
            },
            "documentation": null,
            "id": 53,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cleanTasks",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "417:2:0"
            },
            "returnParameters": {
              "id": 48,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "427:0:0"
            },
            "scope": 104,
            "src": "398:52:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 61,
              "nodeType": "Block",
              "src": "511:23:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 59,
                    "name": "tasks",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13,
                    "src": "524:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Task_$10_storage_$dyn_storage",
                      "typeString": "struct ToDo.Task storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 58,
                  "id": 60,
                  "nodeType": "Return",
                  "src": "517:12:0"
                }
              ]
            },
            "documentation": null,
            "id": 62,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTasks",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "473:2:0"
            },
            "returnParameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "496:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Task_$10_memory_$dyn_memory_ptr",
                    "typeString": "struct ToDo.Task[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 55,
                      "name": "Task",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 10,
                      "src": "496:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$10_storage_ptr",
                        "typeString": "struct ToDo.Task"
                      }
                    },
                    "id": 56,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "496:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Task_$10_storage_$dyn_storage_ptr",
                      "typeString": "struct ToDo.Task[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "495:15:0"
            },
            "scope": 104,
            "src": "456:78:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 102,
              "nodeType": "Block",
              "src": "602:330:0",
              "statements": [
                {
                  "assignments": [
                    71
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 71,
                      "name": "result",
                      "nodeType": "VariableDeclaration",
                      "scope": 102,
                      "src": "608:20:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Task_$10_memory_$dyn_memory_ptr",
                        "typeString": "struct ToDo.Task[]"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 69,
                          "name": "Task",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 10,
                          "src": "608:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$10_storage_ptr",
                            "typeString": "struct ToDo.Task"
                          }
                        },
                        "id": 70,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "608:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Task_$10_storage_$dyn_storage_ptr",
                          "typeString": "struct ToDo.Task[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 78,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 75,
                          "name": "tasks",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "642:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Task_$10_storage_$dyn_storage",
                            "typeString": "struct ToDo.Task storage ref[] storage ref"
                          }
                        },
                        "id": 76,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "642:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 74,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "631:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Task_$10_memory_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (struct ToDo.Task memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 72,
                          "name": "Task",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 10,
                          "src": "635:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$10_storage_ptr",
                            "typeString": "struct ToDo.Task"
                          }
                        },
                        "id": 73,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "635:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Task_$10_storage_$dyn_storage_ptr",
                          "typeString": "struct ToDo.Task[]"
                        }
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "631:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Task_$10_memory_$dyn_memory",
                      "typeString": "struct ToDo.Task memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "608:47:0"
                },
                {
                  "body": {
                    "id": 98,
                    "nodeType": "Block",
                    "src": "725:183:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 96,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 90,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 71,
                              "src": "774:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Task_$10_memory_$dyn_memory_ptr",
                                "typeString": "struct ToDo.Task memory[] memory"
                              }
                            },
                            "id": 92,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 91,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80,
                              "src": "781:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "774:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$10_memory",
                              "typeString": "struct ToDo.Task memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 93,
                              "name": "tasks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13,
                              "src": "786:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Task_$10_storage_$dyn_storage",
                                "typeString": "struct ToDo.Task storage ref[] storage ref"
                              }
                            },
                            "id": 95,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 94,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80,
                              "src": "792:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "786:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$10_storage",
                              "typeString": "struct ToDo.Task storage ref"
                            }
                          },
                          "src": "774:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$10_memory",
                            "typeString": "struct ToDo.Task memory"
                          }
                        },
                        "id": 97,
                        "nodeType": "ExpressionStatement",
                        "src": "774:20:0"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 83,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80,
                      "src": "702:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 84,
                        "name": "tasks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "706:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Task_$10_storage_$dyn_storage",
                          "typeString": "struct ToDo.Task storage ref[] storage ref"
                        }
                      },
                      "id": 85,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "706:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "702:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 99,
                  "initializationExpression": {
                    "assignments": [
                      80
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 80,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 99,
                        "src": "690:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 79,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "690:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 82,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 81,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "699:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "690:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 88,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "720:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 87,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "720:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 89,
                    "nodeType": "ExpressionStatement",
                    "src": "720:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "685:223:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 100,
                    "name": "result",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 71,
                    "src": "921:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Task_$10_memory_$dyn_memory_ptr",
                      "typeString": "struct ToDo.Task memory[] memory"
                    }
                  },
                  "functionReturnParameters": 67,
                  "id": 101,
                  "nodeType": "Return",
                  "src": "914:13:0"
                }
              ]
            },
            "documentation": null,
            "id": 103,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTasksByOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "562:2:0"
            },
            "returnParameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 103,
                  "src": "587:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Task_$10_memory_$dyn_memory_ptr",
                    "typeString": "struct ToDo.Task[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 64,
                      "name": "Task",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 10,
                      "src": "587:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$10_storage_ptr",
                        "typeString": "struct ToDo.Task"
                      }
                    },
                    "id": 65,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "587:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Task_$10_storage_$dyn_storage_ptr",
                      "typeString": "struct ToDo.Task[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "586:15:0"
            },
            "scope": 104,
            "src": "538:394:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 105,
        "src": "35:903:0"
      }
    ],
    "src": "0:938:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/src/contracts/ToDo.sol",
      "exportedSymbols": {
        "ToDo": [
          104
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "0:33:0"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            104
          ],
          "name": "ToDo",
          "scope": 105
        },
        "children": [
          {
            "attributes": {
              "canonicalName": "ToDo.Task",
              "name": "Task",
              "scope": 104,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "description",
                  "scope": 10,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 2,
                    "name": "ElementaryTypeName",
                    "src": "71:6:0"
                  }
                ],
                "id": 3,
                "name": "VariableDeclaration",
                "src": "71:18:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "user",
                  "scope": 10,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 4,
                    "name": "ElementaryTypeName",
                    "src": "95:6:0"
                  }
                ],
                "id": 5,
                "name": "VariableDeclaration",
                "src": "95:11:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "status",
                  "scope": 10,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bool",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 6,
                    "name": "ElementaryTypeName",
                    "src": "112:4:0"
                  }
                ],
                "id": 7,
                "name": "VariableDeclaration",
                "src": "112:11:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "owner",
                  "scope": 10,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 8,
                    "name": "ElementaryTypeName",
                    "src": "129:7:0"
                  }
                ],
                "id": 9,
                "name": "VariableDeclaration",
                "src": "129:13:0"
              }
            ],
            "id": 10,
            "name": "StructDefinition",
            "src": "53:94:0"
          },
          {
            "attributes": {
              "constant": false,
              "name": "tasks",
              "scope": 104,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "struct ToDo.Task[]",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "length": null,
                  "type": "struct ToDo.Task[]"
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Task",
                      "referencedDeclaration": 10,
                      "type": "struct ToDo.Task"
                    },
                    "id": 11,
                    "name": "UserDefinedTypeName",
                    "src": "151:4:0"
                  }
                ],
                "id": 12,
                "name": "ArrayTypeName",
                "src": "151:6:0"
              }
            ],
            "id": 13,
            "name": "VariableDeclaration",
            "src": "151:19:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "createTask",
              "scope": 104,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_description",
                      "scope": 33,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 14,
                        "name": "ElementaryTypeName",
                        "src": "195:6:0"
                      }
                    ],
                    "id": 15,
                    "name": "VariableDeclaration",
                    "src": "195:26:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_user",
                      "scope": 33,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 16,
                        "name": "ElementaryTypeName",
                        "src": "223:6:0"
                      }
                    ],
                    "id": 17,
                    "name": "VariableDeclaration",
                    "src": "223:19:0"
                  }
                ],
                "id": 18,
                "name": "ParameterList",
                "src": "194:49:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 19,
                "name": "ParameterList",
                "src": "251:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Task_$10_memory",
                                  "typeString": "struct ToDo.Task memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "referencedDeclaration": null,
                              "type": "function (struct ToDo.Task storage ref) returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 13,
                                  "type": "struct ToDo.Task storage ref[] storage ref",
                                  "value": "tasks"
                                },
                                "id": 20,
                                "name": "Identifier",
                                "src": "257:5:0"
                              }
                            ],
                            "id": 22,
                            "name": "MemberAccess",
                            "src": "257:10:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "struct ToDo.Task memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10,
                                  "type": "type(struct ToDo.Task storage pointer)",
                                  "value": "Task"
                                },
                                "id": 23,
                                "name": "Identifier",
                                "src": "268:4:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 15,
                                  "type": "string memory",
                                  "value": "_description"
                                },
                                "id": 24,
                                "name": "Identifier",
                                "src": "273:12:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 17,
                                  "type": "string memory",
                                  "value": "_user"
                                },
                                "id": 25,
                                "name": "Identifier",
                                "src": "287:5:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "66616c7365",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "false"
                                },
                                "id": 26,
                                "name": "Literal",
                                "src": "294:5:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 119,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 27,
                                    "name": "Identifier",
                                    "src": "301:3:0"
                                  }
                                ],
                                "id": 28,
                                "name": "MemberAccess",
                                "src": "301:10:0"
                              }
                            ],
                            "id": 29,
                            "name": "FunctionCall",
                            "src": "268:44:0"
                          }
                        ],
                        "id": 30,
                        "name": "FunctionCall",
                        "src": "257:56:0"
                      }
                    ],
                    "id": 31,
                    "name": "ExpressionStatement",
                    "src": "257:56:0"
                  }
                ],
                "id": 32,
                "name": "Block",
                "src": "251:67:0"
              }
            ],
            "id": 33,
            "name": "FunctionDefinition",
            "src": "175:143:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "checkTask",
              "scope": 104,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_id",
                      "scope": 46,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint8",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint8",
                          "type": "uint8"
                        },
                        "id": 34,
                        "name": "ElementaryTypeName",
                        "src": "341:5:0"
                      }
                    ],
                    "id": 35,
                    "name": "VariableDeclaration",
                    "src": "341:9:0"
                  }
                ],
                "id": 36,
                "name": "ParameterList",
                "src": "340:11:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 37,
                "name": "ParameterList",
                "src": "359:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "status",
                              "referencedDeclaration": 7,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct ToDo.Task storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 13,
                                      "type": "struct ToDo.Task storage ref[] storage ref",
                                      "value": "tasks"
                                    },
                                    "id": 38,
                                    "name": "Identifier",
                                    "src": "365:5:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 35,
                                      "type": "uint8",
                                      "value": "_id"
                                    },
                                    "id": 39,
                                    "name": "Identifier",
                                    "src": "371:3:0"
                                  }
                                ],
                                "id": 40,
                                "name": "IndexAccess",
                                "src": "365:10:0"
                              }
                            ],
                            "id": 41,
                            "name": "MemberAccess",
                            "src": "365:17:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 42,
                            "name": "Literal",
                            "src": "385:4:0"
                          }
                        ],
                        "id": 43,
                        "name": "Assignment",
                        "src": "365:24:0"
                      }
                    ],
                    "id": 44,
                    "name": "ExpressionStatement",
                    "src": "365:24:0"
                  }
                ],
                "id": 45,
                "name": "Block",
                "src": "359:35:0"
              }
            ],
            "id": 46,
            "name": "FunctionDefinition",
            "src": "322:72:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "cleanTasks",
              "scope": 104,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 47,
                "name": "ParameterList",
                "src": "417:2:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 48,
                "name": "ParameterList",
                "src": "427:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "delete",
                          "prefix": true,
                          "type": "tuple()"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 13,
                              "type": "struct ToDo.Task storage ref[] storage ref",
                              "value": "tasks"
                            },
                            "id": 49,
                            "name": "Identifier",
                            "src": "440:5:0"
                          }
                        ],
                        "id": 50,
                        "name": "UnaryOperation",
                        "src": "433:12:0"
                      }
                    ],
                    "id": 51,
                    "name": "ExpressionStatement",
                    "src": "433:12:0"
                  }
                ],
                "id": 52,
                "name": "Block",
                "src": "427:23:0"
              }
            ],
            "id": 53,
            "name": "FunctionDefinition",
            "src": "398:52:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getTasks",
              "scope": 104,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 54,
                "name": "ParameterList",
                "src": "473:2:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 62,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct ToDo.Task[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "struct ToDo.Task[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Task",
                              "referencedDeclaration": 10,
                              "type": "struct ToDo.Task"
                            },
                            "id": 55,
                            "name": "UserDefinedTypeName",
                            "src": "496:4:0"
                          }
                        ],
                        "id": 56,
                        "name": "ArrayTypeName",
                        "src": "496:6:0"
                      }
                    ],
                    "id": 57,
                    "name": "VariableDeclaration",
                    "src": "496:13:0"
                  }
                ],
                "id": 58,
                "name": "ParameterList",
                "src": "495:15:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 58
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 13,
                          "type": "struct ToDo.Task storage ref[] storage ref",
                          "value": "tasks"
                        },
                        "id": 59,
                        "name": "Identifier",
                        "src": "524:5:0"
                      }
                    ],
                    "id": 60,
                    "name": "Return",
                    "src": "517:12:0"
                  }
                ],
                "id": 61,
                "name": "Block",
                "src": "511:23:0"
              }
            ],
            "id": 62,
            "name": "FunctionDefinition",
            "src": "456:78:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getTasksByOwner",
              "scope": 104,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 63,
                "name": "ParameterList",
                "src": "562:2:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 103,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct ToDo.Task[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "struct ToDo.Task[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Task",
                              "referencedDeclaration": 10,
                              "type": "struct ToDo.Task"
                            },
                            "id": 64,
                            "name": "UserDefinedTypeName",
                            "src": "587:4:0"
                          }
                        ],
                        "id": 65,
                        "name": "ArrayTypeName",
                        "src": "587:6:0"
                      }
                    ],
                    "id": 66,
                    "name": "VariableDeclaration",
                    "src": "587:13:0"
                  }
                ],
                "id": 67,
                "name": "ParameterList",
                "src": "586:15:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        71
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "result",
                          "scope": 102,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct ToDo.Task[]",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "length": null,
                              "type": "struct ToDo.Task[]"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "contractScope": null,
                                  "name": "Task",
                                  "referencedDeclaration": 10,
                                  "type": "struct ToDo.Task"
                                },
                                "id": 69,
                                "name": "UserDefinedTypeName",
                                "src": "608:4:0"
                              }
                            ],
                            "id": 70,
                            "name": "ArrayTypeName",
                            "src": "608:6:0"
                          }
                        ],
                        "id": 71,
                        "name": "VariableDeclaration",
                        "src": "608:20:0"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "struct ToDo.Task memory[] memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "type": "function (uint256) pure returns (struct ToDo.Task memory[] memory)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "length": null,
                                  "type": "struct ToDo.Task[]"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "contractScope": null,
                                      "name": "Task",
                                      "referencedDeclaration": 10,
                                      "type": "struct ToDo.Task"
                                    },
                                    "id": 72,
                                    "name": "UserDefinedTypeName",
                                    "src": "635:4:0"
                                  }
                                ],
                                "id": 73,
                                "name": "ArrayTypeName",
                                "src": "635:6:0"
                              }
                            ],
                            "id": 74,
                            "name": "NewExpression",
                            "src": "631:10:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 13,
                                  "type": "struct ToDo.Task storage ref[] storage ref",
                                  "value": "tasks"
                                },
                                "id": 75,
                                "name": "Identifier",
                                "src": "642:5:0"
                              }
                            ],
                            "id": 76,
                            "name": "MemberAccess",
                            "src": "642:12:0"
                          }
                        ],
                        "id": 77,
                        "name": "FunctionCall",
                        "src": "631:24:0"
                      }
                    ],
                    "id": 78,
                    "name": "VariableDeclarationStatement",
                    "src": "608:47:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            80
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "name": "i",
                              "scope": 99,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "value": null,
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint",
                                  "type": "uint256"
                                },
                                "id": 79,
                                "name": "ElementaryTypeName",
                                "src": "690:4:0"
                              }
                            ],
                            "id": 80,
                            "name": "VariableDeclaration",
                            "src": "690:6:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 81,
                            "name": "Literal",
                            "src": "699:1:0"
                          }
                        ],
                        "id": 82,
                        "name": "VariableDeclarationStatement",
                        "src": "690:10:0"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 80,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 83,
                            "name": "Identifier",
                            "src": "702:1:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 13,
                                  "type": "struct ToDo.Task storage ref[] storage ref",
                                  "value": "tasks"
                                },
                                "id": 84,
                                "name": "Identifier",
                                "src": "706:5:0"
                              }
                            ],
                            "id": 85,
                            "name": "MemberAccess",
                            "src": "706:12:0"
                          }
                        ],
                        "id": 86,
                        "name": "BinaryOperation",
                        "src": "702:16:0"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 80,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 87,
                                "name": "Identifier",
                                "src": "720:1:0"
                              }
                            ],
                            "id": 88,
                            "name": "UnaryOperation",
                            "src": "720:3:0"
                          }
                        ],
                        "id": 89,
                        "name": "ExpressionStatement",
                        "src": "720:3:0"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "struct ToDo.Task memory"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "type": "struct ToDo.Task memory"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 71,
                                          "type": "struct ToDo.Task memory[] memory",
                                          "value": "result"
                                        },
                                        "id": 90,
                                        "name": "Identifier",
                                        "src": "774:6:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 80,
                                          "type": "uint256",
                                          "value": "i"
                                        },
                                        "id": 91,
                                        "name": "Identifier",
                                        "src": "781:1:0"
                                      }
                                    ],
                                    "id": 92,
                                    "name": "IndexAccess",
                                    "src": "774:9:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct ToDo.Task storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 13,
                                          "type": "struct ToDo.Task storage ref[] storage ref",
                                          "value": "tasks"
                                        },
                                        "id": 93,
                                        "name": "Identifier",
                                        "src": "786:5:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 80,
                                          "type": "uint256",
                                          "value": "i"
                                        },
                                        "id": 94,
                                        "name": "Identifier",
                                        "src": "792:1:0"
                                      }
                                    ],
                                    "id": 95,
                                    "name": "IndexAccess",
                                    "src": "786:8:0"
                                  }
                                ],
                                "id": 96,
                                "name": "Assignment",
                                "src": "774:20:0"
                              }
                            ],
                            "id": 97,
                            "name": "ExpressionStatement",
                            "src": "774:20:0"
                          }
                        ],
                        "id": 98,
                        "name": "Block",
                        "src": "725:183:0"
                      }
                    ],
                    "id": 99,
                    "name": "ForStatement",
                    "src": "685:223:0"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 67
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 71,
                          "type": "struct ToDo.Task memory[] memory",
                          "value": "result"
                        },
                        "id": 100,
                        "name": "Identifier",
                        "src": "921:6:0"
                      }
                    ],
                    "id": 101,
                    "name": "Return",
                    "src": "914:13:0"
                  }
                ],
                "id": 102,
                "name": "Block",
                "src": "602:330:0"
              }
            ],
            "id": 103,
            "name": "FunctionDefinition",
            "src": "538:394:0"
          }
        ],
        "id": 104,
        "name": "ContractDefinition",
        "src": "35:903:0"
      }
    ],
    "id": 105,
    "name": "SourceUnit",
    "src": "0:938:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "1648980848660": {
      "events": {},
      "links": {},
      "address": "0xb09bCc172050fBd4562da8b229Cf3E45Dc3045A6",
      "transactionHash": "0x0e3b337e29b5705bb628c750ef4e2d0eb7e8dc485685ff79d206759a8f90253a"
    },
    "1648983666495": {
      "events": {},
      "links": {},
      "address": "0x734Fc3BeB0f8F11D94048c125Bc1b218B09a9c44",
      "transactionHash": "0x0bccf44bfc2069c73c82ff044a0a7cdd89b39ce5afc1134a909446954ea53df3"
    },
    "1648995768935": {
      "events": {},
      "links": {},
      "address": "0xDb56f2e9369E0D7bD191099125a3f6C370F8ed15",
      "transactionHash": "0x51a21bcc5d953384b6fe8d6e0e993e1e8266c42b19ba89f21b9e8b4c1c731240"
    },
    "1649185141211": {
      "events": {},
      "links": {},
      "address": "0xCfEB869F69431e42cdB54A4F4f105C19C080A601",
      "transactionHash": "0x99817c62074bb43b8b0ee6db8d7bfa296cbc366cc2b06c6ce440b3f12b13e9c4"
    },
    "1649188078171": {
      "events": {},
      "links": {},
      "address": "0x254dffcd3277C0b1660F6d42EFbB754edaBAbC2B",
      "transactionHash": "0x27fcd36f9ab09c0962c8774c406461b788c69467d4884652238419ca701b52be"
    },
    "1649208650500": {
      "events": {},
      "links": {},
      "address": "0xe14E93b1a9f7227f7B3851B12FDF4c7BcA4428Db",
      "transactionHash": "0xb5ec01afdb94b8ddf1acb39032a40beb5b596b4f0c45b355f559fda6133ca6d4"
    }
  },
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-04-06T20:58:31.318Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}