{
  "contractName": "ToDo",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tasks",
      "outputs": [
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "user",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_user",
          "type": "string"
        }
      ],
      "name": "createTask",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_id",
          "type": "uint8"
        }
      ],
      "name": "checkTask",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "cleanTasks",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTasks",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "user",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "status",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "internalType": "struct ToDo.Task[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "getTasksByOwner",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "user",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "status",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "internalType": "struct ToDo.Task[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_id\",\"type\":\"uint8\"}],\"name\":\"checkTask\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"cleanTasks\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_user\",\"type\":\"string\"}],\"name\":\"createTask\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTasks\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"user\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"internalType\":\"struct ToDo.Task[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getTasksByOwner\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"user\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"internalType\":\"struct ToDo.Task[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tasks\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"user\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"project:/src/contracts/ToDo.sol\":\"ToDo\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/src/contracts/ToDo.sol\":{\"keccak256\":\"0x636da7fe1844f890476027854694fb925d28bf148d8ce6c70bbb699f5f05635c\",\"urls\":[\"bzz-raw://9471206fecf9ff76d32bf7ed4ff024e10f0da9d6130c0cc78530d951ebdd16e8\",\"dweb:/ipfs/QmaLHyaZdhYktwnKzHJ4kmHLSUnqxng6qzKrmrCnVj1fpN\"]},\"project:/src/contracts/ownable.sol\":{\"keccak256\":\"0x95cb138c8a571e0bffb8fad7608cc81f6670220597c9c8ce0e9eda47e0a686b0\",\"urls\":[\"bzz-raw://2b8765bbd308b0aace307857cdd820844a17dc6292530fcb4dbc75a0fae964ca\",\"dweb:/ipfs/QmUReS3t4bvfLmWa6Vi52LuHB2YmnFQvy4q6o7MWLuKKCA\"]}},\"version\":1}",
  "bytecode": "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a361149d806100cf6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b146101245780638f32d59b14610142578063e65141e414610160578063f0f39ce41461017c578063f2fde38b146101ac5761009e565b806304a87e38146100a3578063292a4585146100c15780632e99a9e5146100dd578063715018a6146100e75780638d977672146100f1575b600080fd5b6100ab6101c8565b6040516100b8919061121e565b60405180910390f35b6100db60048036036100d69190810190610fa4565b6103dc565b005b6100e56104eb565b005b6100ef61050c565b005b61010b60048036036101069190810190611010565b6105dc565b60405161011b949392919061125b565b60405180910390f35b61012c610776565b6040516101399190611203565b60405180910390f35b61014a61079f565b6040516101579190611240565b60405180910390f35b61017a60048036036101759190810190611039565b6107f6565b005b61019660048036036101919190810190610f7b565b610926565b6040516101a3919061121e565b60405180910390f35b6101c660048036036101c19190810190610f7b565b610c08565b005b60606001805480602002602001604051908101604052809291908181526020016000905b828210156103d35783829060005260206000209060030201604051806080016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102a85780601f1061027d576101008083540402835291602001916102a8565b820191906000526020600020905b81548152906001019060200180831161028b57829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561034a5780601f1061031f5761010080835404028352916020019161034a565b820191906000526020600020905b81548152906001019060200180831161032d57829003601f168201915b505050505081526020016002820160009054906101000a900460ff161515151581526020016002820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050815260200190600101906101ec565b50505050905090565b600160405180608001604052808481526020018381526020016000151581526020013373ffffffffffffffffffffffffffffffffffffffff1681525090806001815401808255809150509060018203906000526020600020906003020160009091929091909150600082015181600001908051906020019061045f929190610d1d565b50602082015181600101908051906020019061047c929190610d1d565b5060408201518160020160006101000a81548160ff02191690831515021790555060608201518160020160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b6104f361079f565b6104fc57600080fd5b6001600061050a9190610d9d565b565b61051461079f565b61051d57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600181815481106105e957fe5b9060005260206000209060030201600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106955780601f1061066a57610100808354040283529160200191610695565b820191906000526020600020905b81548152906001019060200180831161067857829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107335780601f1061070857610100808354040283529160200191610733565b820191906000526020600020905b81548152906001019060200180831161071657829003601f168201915b5050505050908060020160009054906101000a900460ff16908060020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b8060ff166001818154811061080757fe5b906000526020600020906003020160020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461087057600080fd5b60018260ff168154811061088057fe5b906000526020600020906003020160020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108e957600080fd5b6001808360ff16815481106108fa57fe5b906000526020600020906003020160020160006101000a81548160ff0219169083151502179055505050565b60608060018054905060405190808252806020026020018201604052801561096857816020015b610955610dc1565b81526020019060019003908161094d5790505b509050600080905060008090505b600180549050811015610bfd576001818154811061099057fe5b906000526020600020906003020160020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610bf05760018181548110610a0257fe5b9060005260206000209060030201604051806080016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ab45780601f10610a8957610100808354040283529160200191610ab4565b820191906000526020600020905b815481529060010190602001808311610a9757829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b565780601f10610b2b57610100808354040283529160200191610b56565b820191906000526020600020905b815481529060010190602001808311610b3957829003601f168201915b505050505081526020016002820160009054906101000a900460ff161515151581526020016002820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050838381518110610bdc57fe5b602002602001018190525081806001019250505b8080600101915050610976565b508192505050919050565b610c1061079f565b610c1957600080fd5b610c2281610c25565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c5f57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610d5e57805160ff1916838001178555610d8c565b82800160010185558215610d8c579182015b82811115610d8b578251825591602001919060010190610d70565b5b509050610d999190610e01565b5090565b5080546000825560030290600052602060002090810190610dbe9190610e26565b50565b60405180608001604052806060815260200160608152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b610e2391905b80821115610e1f576000816000905550600101610e07565b5090565b90565b610e9d91905b80821115610e995760008082016000610e459190610ea0565b600182016000610e559190610ea0565b6002820160006101000a81549060ff02191690556002820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600301610e2c565b5090565b90565b50805460018160011615610100020316600290046000825580601f10610ec65750610ee5565b601f016020900490600052602060002090810190610ee49190610e01565b5b50565b600081359050610ef781611415565b92915050565b600082601f830112610f0e57600080fd5b8135610f21610f1c826112db565b6112ae565b91508082526020830160208301858383011115610f3d57600080fd5b610f488382846113c2565b50505092915050565b600081359050610f608161142c565b92915050565b600081359050610f7581611443565b92915050565b600060208284031215610f8d57600080fd5b6000610f9b84828501610ee8565b91505092915050565b60008060408385031215610fb757600080fd5b600083013567ffffffffffffffff811115610fd157600080fd5b610fdd85828601610efd565b925050602083013567ffffffffffffffff811115610ffa57600080fd5b61100685828601610efd565b9150509250929050565b60006020828403121561102257600080fd5b600061103084828501610f51565b91505092915050565b60006020828403121561104b57600080fd5b600061105984828501610f66565b91505092915050565b600061106e8383611199565b905092915050565b61107f8161136d565b82525050565b61108e8161136d565b82525050565b600061109f82611317565b6110a9818561133a565b9350836020820285016110bb85611307565b8060005b858110156110f757848403895281516110d88582611062565b94506110e38361132d565b925060208a019950506001810190506110bf565b50829750879550505050505092915050565b6111128161137f565b82525050565b6111218161137f565b82525050565b600061113282611322565b61113c818561134b565b935061114c8185602086016113d1565b61115581611404565b840191505092915050565b600061116b82611322565b611175818561135c565b93506111858185602086016113d1565b61118e81611404565b840191505092915050565b600060808301600083015184820360008601526111b68282611127565b915050602083015184820360208601526111d08282611127565b91505060408301516111e56040860182611109565b5060608301516111f86060860182611076565b508091505092915050565b60006020820190506112186000830184611085565b92915050565b600060208201905081810360008301526112388184611094565b905092915050565b60006020820190506112556000830184611118565b92915050565b600060808201905081810360008301526112758187611160565b905081810360208301526112898186611160565b90506112986040830185611118565b6112a56060830184611085565b95945050505050565b6000604051905081810181811067ffffffffffffffff821117156112d157600080fd5b8060405250919050565b600067ffffffffffffffff8211156112f257600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006113788261138b565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b838110156113ef5780820151818401526020810190506113d4565b838111156113fe576000848401525b50505050565b6000601f19601f8301169050919050565b61141e8161136d565b811461142957600080fd5b50565b611435816113ab565b811461144057600080fd5b50565b61144c816113b5565b811461145757600080fd5b5056fea365627a7a7231582096e1fb5ad8e91e757c3ef50eca58ad117df85e9626e98a8459cf0c53f0682c7d6c6578706572696d656e74616cf564736f6c63430005100040",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b146101245780638f32d59b14610142578063e65141e414610160578063f0f39ce41461017c578063f2fde38b146101ac5761009e565b806304a87e38146100a3578063292a4585146100c15780632e99a9e5146100dd578063715018a6146100e75780638d977672146100f1575b600080fd5b6100ab6101c8565b6040516100b8919061121e565b60405180910390f35b6100db60048036036100d69190810190610fa4565b6103dc565b005b6100e56104eb565b005b6100ef61050c565b005b61010b60048036036101069190810190611010565b6105dc565b60405161011b949392919061125b565b60405180910390f35b61012c610776565b6040516101399190611203565b60405180910390f35b61014a61079f565b6040516101579190611240565b60405180910390f35b61017a60048036036101759190810190611039565b6107f6565b005b61019660048036036101919190810190610f7b565b610926565b6040516101a3919061121e565b60405180910390f35b6101c660048036036101c19190810190610f7b565b610c08565b005b60606001805480602002602001604051908101604052809291908181526020016000905b828210156103d35783829060005260206000209060030201604051806080016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102a85780601f1061027d576101008083540402835291602001916102a8565b820191906000526020600020905b81548152906001019060200180831161028b57829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561034a5780601f1061031f5761010080835404028352916020019161034a565b820191906000526020600020905b81548152906001019060200180831161032d57829003601f168201915b505050505081526020016002820160009054906101000a900460ff161515151581526020016002820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050815260200190600101906101ec565b50505050905090565b600160405180608001604052808481526020018381526020016000151581526020013373ffffffffffffffffffffffffffffffffffffffff1681525090806001815401808255809150509060018203906000526020600020906003020160009091929091909150600082015181600001908051906020019061045f929190610d1d565b50602082015181600101908051906020019061047c929190610d1d565b5060408201518160020160006101000a81548160ff02191690831515021790555060608201518160020160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b6104f361079f565b6104fc57600080fd5b6001600061050a9190610d9d565b565b61051461079f565b61051d57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600181815481106105e957fe5b9060005260206000209060030201600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106955780601f1061066a57610100808354040283529160200191610695565b820191906000526020600020905b81548152906001019060200180831161067857829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107335780601f1061070857610100808354040283529160200191610733565b820191906000526020600020905b81548152906001019060200180831161071657829003601f168201915b5050505050908060020160009054906101000a900460ff16908060020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b8060ff166001818154811061080757fe5b906000526020600020906003020160020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461087057600080fd5b60018260ff168154811061088057fe5b906000526020600020906003020160020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108e957600080fd5b6001808360ff16815481106108fa57fe5b906000526020600020906003020160020160006101000a81548160ff0219169083151502179055505050565b60608060018054905060405190808252806020026020018201604052801561096857816020015b610955610dc1565b81526020019060019003908161094d5790505b509050600080905060008090505b600180549050811015610bfd576001818154811061099057fe5b906000526020600020906003020160020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610bf05760018181548110610a0257fe5b9060005260206000209060030201604051806080016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ab45780601f10610a8957610100808354040283529160200191610ab4565b820191906000526020600020905b815481529060010190602001808311610a9757829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b565780601f10610b2b57610100808354040283529160200191610b56565b820191906000526020600020905b815481529060010190602001808311610b3957829003601f168201915b505050505081526020016002820160009054906101000a900460ff161515151581526020016002820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050838381518110610bdc57fe5b602002602001018190525081806001019250505b8080600101915050610976565b508192505050919050565b610c1061079f565b610c1957600080fd5b610c2281610c25565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c5f57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610d5e57805160ff1916838001178555610d8c565b82800160010185558215610d8c579182015b82811115610d8b578251825591602001919060010190610d70565b5b509050610d999190610e01565b5090565b5080546000825560030290600052602060002090810190610dbe9190610e26565b50565b60405180608001604052806060815260200160608152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b610e2391905b80821115610e1f576000816000905550600101610e07565b5090565b90565b610e9d91905b80821115610e995760008082016000610e459190610ea0565b600182016000610e559190610ea0565b6002820160006101000a81549060ff02191690556002820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600301610e2c565b5090565b90565b50805460018160011615610100020316600290046000825580601f10610ec65750610ee5565b601f016020900490600052602060002090810190610ee49190610e01565b5b50565b600081359050610ef781611415565b92915050565b600082601f830112610f0e57600080fd5b8135610f21610f1c826112db565b6112ae565b91508082526020830160208301858383011115610f3d57600080fd5b610f488382846113c2565b50505092915050565b600081359050610f608161142c565b92915050565b600081359050610f7581611443565b92915050565b600060208284031215610f8d57600080fd5b6000610f9b84828501610ee8565b91505092915050565b60008060408385031215610fb757600080fd5b600083013567ffffffffffffffff811115610fd157600080fd5b610fdd85828601610efd565b925050602083013567ffffffffffffffff811115610ffa57600080fd5b61100685828601610efd565b9150509250929050565b60006020828403121561102257600080fd5b600061103084828501610f51565b91505092915050565b60006020828403121561104b57600080fd5b600061105984828501610f66565b91505092915050565b600061106e8383611199565b905092915050565b61107f8161136d565b82525050565b61108e8161136d565b82525050565b600061109f82611317565b6110a9818561133a565b9350836020820285016110bb85611307565b8060005b858110156110f757848403895281516110d88582611062565b94506110e38361132d565b925060208a019950506001810190506110bf565b50829750879550505050505092915050565b6111128161137f565b82525050565b6111218161137f565b82525050565b600061113282611322565b61113c818561134b565b935061114c8185602086016113d1565b61115581611404565b840191505092915050565b600061116b82611322565b611175818561135c565b93506111858185602086016113d1565b61118e81611404565b840191505092915050565b600060808301600083015184820360008601526111b68282611127565b915050602083015184820360208601526111d08282611127565b91505060408301516111e56040860182611109565b5060608301516111f86060860182611076565b508091505092915050565b60006020820190506112186000830184611085565b92915050565b600060208201905081810360008301526112388184611094565b905092915050565b60006020820190506112556000830184611118565b92915050565b600060808201905081810360008301526112758187611160565b905081810360208301526112898186611160565b90506112986040830185611118565b6112a56060830184611085565b95945050505050565b6000604051905081810181811067ffffffffffffffff821117156112d157600080fd5b8060405250919050565b600067ffffffffffffffff8211156112f257600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006113788261138b565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b838110156113ef5780820151818401526020810190506113d4565b838111156113fe576000848401525b50505050565b6000601f19601f8301169050919050565b61141e8161136d565b811461142957600080fd5b50565b611435816113ab565b811461144057600080fd5b50565b61144c816113b5565b811461145757600080fd5b5056fea365627a7a7231582096e1fb5ad8e91e757c3ef50eca58ad117df85e9626e98a8459cf0c53f0682c7d6c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "60:1020:0:-;;;520:10:1;511:6;;:19;;;;;;;;;;;;;;;;;;574:6;;;;;;;;;;;541:40;;570:1;541:40;;;;;;;;;;;;60:1020:0;;;;;;",
  "deployedSourceMap": "60:1020:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;60:1020:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;665:78;;;:::i;:::-;;;;;;;;;;;;;;;;311:143;;;;;;;;;;;;;;;;:::i;:::-;;597:62;;;:::i;:::-;;1264:127:1;;;:::i;:::-;;187:19:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;639:70:1;;;:::i;:::-;;;;;;;;;;;;;;;;922:83;;;:::i;:::-;;;;;;;;;;;;;;;;458:135:0;;;;;;;;;;;;;;;;:::i;:::-;;747:327;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1549:101:1;;;;;;;;;;;;;;;;:::i;:::-;;665:78:0;705:13;733:5;726:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;665:78;:::o;311:143::-;393:5;404:44;;;;;;;;409:12;404:44;;;;423:5;404:44;;;;430:5;404:44;;;;;;437:10;404:44;;;;;393:56;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;393:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;311:143;;:::o;597:62::-;822:9:1;:7;:9::i;:::-;814:18;;;;;;649:5:0;;642:12;;;;:::i;:::-;597:62::o;1264:127:1:-;822:9;:7;:9::i;:::-;814:18;;;;;;1358:1;1321:40;;1342:6;;;;;;;;;;;1321:40;;;;;;;;;;;;1384:1;1367:6;;:19;;;;;;;;;;;;;;;;;;1264:127::o;187:19:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;639:70:1:-;676:7;698:6;;;;;;;;;;;691:13;;639:70;:::o;922:83::-;961:4;994:6;;;;;;;;;;;980:20;;:10;:20;;;973:27;;922:83;:::o;458:135:0:-;507:3;211:96;;274:5;280:7;274:14;;;;;;;;;;;;;;;;;;:20;;;;;;;;;;;;260:34;;:10;:34;;;252:43;;;;;;541:5;547:3;541:10;;;;;;;;;;;;;;;;;;;;:16;;;;;;;;;;;;527:30;;:10;:30;;;518:40;;;;;;584:4;564:5;570:3;564:10;;;;;;;;;;;;;;;;;;;;:17;;;:24;;;;;;;;;;;;;;;;;;458:135;;:::o;747:327::-;807:13;828:20;862:5;:12;;;;851:24;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;828:47;;881:12;896:1;881:16;;908:6;917:1;908:10;;903:147;924:5;:12;;;;920:1;:16;903:147;;;964:5;970:1;964:8;;;;;;;;;;;;;;;;;;:14;;;;;;;;;;;;955:23;;:5;:23;;;951:93;;;1008:5;1014:1;1008:8;;;;;;;;;;;;;;;;;;990:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:6;997:7;990:15;;;;;;;;;;;;;:26;;;;1026:9;;;;;;;951:93;938:3;;;;;;;903:147;;;;1063:6;1056:13;;;;747:327;;;:::o;1549:101:1:-;822:9;:7;:9::i;:::-;814:18;;;;;;1617:28;1636:8;1617:18;:28::i;:::-;1549:101;:::o;1781:169::-;1870:1;1850:22;;:8;:22;;;;1842:31;;;;;;1913:8;1884:38;;1905:6;;;;;;;;;;;1884:38;;;;;;;;;;;;1937:8;1928:6;;:17;;;;;;;;;;;;;;;;;;1781:169;:::o;60:1020:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;143:442;;245:3;238:4;230:6;226:17;222:27;212:2;;263:1;260;253:12;212:2;300:6;287:20;322:65;337:49;379:6;337:49;;;322:65;;;313:74;;407:6;400:5;393:21;443:4;435:6;431:17;476:4;469:5;465:16;511:3;502:6;497:3;493:16;490:25;487:2;;;528:1;525;518:12;487:2;538:41;572:6;567:3;562;538:41;;;205:380;;;;;;;;593:130;;673:6;660:20;651:29;;685:33;712:5;685:33;;;645:78;;;;;730:126;;808:6;795:20;786:29;;820:31;845:5;820:31;;;780:76;;;;;863:241;;967:2;955:9;946:7;942:23;938:32;935:2;;;983:1;980;973:12;935:2;1018:1;1035:53;1080:7;1071:6;1060:9;1056:22;1035:53;;;1025:63;;997:97;929:175;;;;;1111:578;;;1252:2;1240:9;1231:7;1227:23;1223:32;1220:2;;;1268:1;1265;1258:12;1220:2;1331:1;1320:9;1316:17;1303:31;1354:18;1346:6;1343:30;1340:2;;;1386:1;1383;1376:12;1340:2;1406:63;1461:7;1452:6;1441:9;1437:22;1406:63;;;1396:73;;1282:193;1534:2;1523:9;1519:18;1506:32;1558:18;1550:6;1547:30;1544:2;;;1590:1;1587;1580:12;1544:2;1610:63;1665:7;1656:6;1645:9;1641:22;1610:63;;;1600:73;;1485:194;1214:475;;;;;;1696:241;;1800:2;1788:9;1779:7;1775:23;1771:32;1768:2;;;1816:1;1813;1806:12;1768:2;1851:1;1868:53;1913:7;1904:6;1893:9;1889:22;1868:53;;;1858:63;;1830:97;1762:175;;;;;1944:237;;2046:2;2034:9;2025:7;2021:23;2017:32;2014:2;;;2062:1;2059;2052:12;2014:2;2097:1;2114:51;2157:7;2148:6;2137:9;2133:22;2114:51;;;2104:61;;2076:95;2008:173;;;;;2189:221;;2322:82;2400:3;2392:6;2322:82;;;2308:96;;2301:109;;;;;2418:103;2491:24;2509:5;2491:24;;;2486:3;2479:37;2473:48;;;2528:113;2611:24;2629:5;2611:24;;;2606:3;2599:37;2593:48;;;2697:976;;2874:70;2938:5;2874:70;;;2957:102;3052:6;3047:3;2957:102;;;2950:109;;3082:3;3124:4;3116:6;3112:17;3107:3;3103:27;3151:72;3217:5;3151:72;;;3243:7;3271:1;3256:378;3281:6;3278:1;3275:13;3256:378;;;3343:9;3337:4;3333:20;3328:3;3321:33;3388:6;3382:13;3410:96;3501:4;3486:13;3410:96;;;3402:104;;3523:76;3592:6;3523:76;;;3513:86;;3622:4;3617:3;3613:14;3606:21;;3313:321;3303:1;3300;3296:9;3291:14;;3256:378;;;3260:14;3647:4;3640:11;;3664:3;3657:10;;2853:820;;;;;;;;;;3681:94;3748:21;3763:5;3748:21;;;3743:3;3736:34;3730:45;;;3782:104;3859:21;3874:5;3859:21;;;3854:3;3847:34;3841:45;;;3893:319;;3991:35;4020:5;3991:35;;;4038:61;4092:6;4087:3;4038:61;;;4031:68;;4104:52;4149:6;4144:3;4137:4;4130:5;4126:16;4104:52;;;4177:29;4199:6;4177:29;;;4172:3;4168:39;4161:46;;3971:241;;;;;;4219:339;;4327:35;4356:5;4327:35;;;4374:71;4438:6;4433:3;4374:71;;;4367:78;;4450:52;4495:6;4490:3;4483:4;4476:5;4472:16;4450:52;;;4523:29;4545:6;4523:29;;;4518:3;4514:39;4507:46;;4307:251;;;;;;4608:927;;4735:4;4730:3;4726:14;4825:4;4818:5;4814:16;4808:23;4877:3;4871:4;4867:14;4860:4;4855:3;4851:14;4844:38;4897:69;4961:4;4947:12;4897:69;;;4889:77;;4755:223;5051:4;5044:5;5040:16;5034:23;5103:3;5097:4;5093:14;5086:4;5081:3;5077:14;5070:38;5123:69;5187:4;5173:12;5123:69;;;5115:77;;4988:216;5279:4;5272:5;5268:16;5262:23;5291:57;5342:4;5337:3;5333:14;5319:12;5291:57;;;5214:140;5428:4;5421:5;5417:16;5411:23;5440:63;5497:4;5492:3;5488:14;5474:12;5440:63;;;5364:145;5526:4;5519:11;;4708:827;;;;;;5542:213;;5660:2;5649:9;5645:18;5637:26;;5674:71;5742:1;5731:9;5727:17;5718:6;5674:71;;;5631:124;;;;;5762:425;;5962:2;5951:9;5947:18;5939:26;;6012:9;6006:4;6002:20;5998:1;5987:9;5983:17;5976:47;6037:140;6172:4;6163:6;6037:140;;;6029:148;;5933:254;;;;;6194:201;;6306:2;6295:9;6291:18;6283:26;;6320:65;6382:1;6371:9;6367:17;6358:6;6320:65;;;6277:118;;;;;6402:695;;6630:3;6619:9;6615:19;6607:27;;6681:9;6675:4;6671:20;6667:1;6656:9;6652:17;6645:47;6706:74;6775:4;6766:6;6706:74;;;6698:82;;6828:9;6822:4;6818:20;6813:2;6802:9;6798:18;6791:48;6853:74;6922:4;6913:6;6853:74;;;6845:82;;6938:66;7000:2;6989:9;6985:18;6976:6;6938:66;;;7015:72;7083:2;7072:9;7068:18;7059:6;7015:72;;;6601:496;;;;;;;;7104:256;;7166:2;7160:9;7150:19;;7204:4;7196:6;7192:17;7303:6;7291:10;7288:22;7267:18;7255:10;7252:34;7249:62;7246:2;;;7324:1;7321;7314:12;7246:2;7344:10;7340:2;7333:22;7144:216;;;;;7367:322;;7511:18;7503:6;7500:30;7497:2;;;7543:1;7540;7533:12;7497:2;7610:4;7606:9;7599:4;7591:6;7587:17;7583:33;7575:41;;7674:4;7668;7664:15;7656:23;;7434:255;;;;7696:167;;7798:3;7790:11;;7836:4;7831:3;7827:14;7819:22;;7784:79;;;;7870:153;;7995:5;7989:12;7979:22;;7960:63;;;;8030:118;;8120:5;8114:12;8104:22;;8085:63;;;;8155:124;;8269:4;8264:3;8260:14;8252:22;;8246:33;;;;8287:194;;8433:6;8428:3;8421:19;8470:4;8465:3;8461:14;8446:29;;8414:67;;;;;8490:153;;8595:6;8590:3;8583:19;8632:4;8627:3;8623:14;8608:29;;8576:67;;;;;8652:163;;8767:6;8762:3;8755:19;8804:4;8799:3;8795:14;8780:29;;8748:67;;;;;8823:91;;8885:24;8903:5;8885:24;;;8874:35;;8868:46;;;;8921:85;;8994:5;8987:13;8980:21;8969:32;;8963:43;;;;9013:121;;9086:42;9079:5;9075:54;9064:65;;9058:76;;;;9141:72;;9203:5;9192:16;;9186:27;;;;9220:81;;9291:4;9284:5;9280:16;9269:27;;9263:38;;;;9309:145;9390:6;9385:3;9380;9367:30;9446:1;9437:6;9432:3;9428:16;9421:27;9360:94;;;;9463:268;9528:1;9535:101;9549:6;9546:1;9543:13;9535:101;;;9625:1;9620:3;9616:11;9610:18;9606:1;9601:3;9597:11;9590:39;9571:2;9568:1;9564:10;9559:15;;9535:101;;;9651:6;9648:1;9645:13;9642:2;;;9716:1;9707:6;9702:3;9698:16;9691:27;9642:2;9512:219;;;;;9739:97;;9827:2;9823:7;9818:2;9811:5;9807:14;9803:28;9793:38;;9787:49;;;;9844:117;9913:24;9931:5;9913:24;;;9906:5;9903:35;9893:2;;9952:1;9949;9942:12;9893:2;9887:74;;9968:117;10037:24;10055:5;10037:24;;;10030:5;10027:35;10017:2;;10076:1;10073;10066:12;10017:2;10011:74;;10092:113;10159:22;10175:5;10159:22;;;10152:5;10149:33;10139:2;;10196:1;10193;10186:12;10139:2;10133:72;",
  "source": "pragma experimental ABIEncoderV2;\n\nimport \"./ownable.sol\";\n\ncontract ToDo is Ownable {\n  struct Task {\n    string description;\n    string user;\n    bool status;\n    address owner;\n  }\n\n  Task[] public tasks;\n\n  modifier onlyOwnerOf(uint _taskId) {\n    require(msg.sender == tasks[_taskId].owner);\n    _;\n  }\n\n  function createTask(string memory _description, string memory _user) public {\n    tasks.push(Task(_description, _user, false, msg.sender));\n  }\n\n  function checkTask(uint8 _id) public onlyOwnerOf(_id) {\n    require (msg.sender == tasks[_id].owner);\n    tasks[_id].status = true;\n  }\n\n  function cleanTasks() public onlyOwner {\n    delete tasks;\n  }\n  \n  function getTasks() public view returns(Task[] memory) {\n    return tasks;\n  }\n\n  function getTasksByOwner(address owner) public view returns(Task[] memory) {\n    Task[] memory result = new Task[](tasks.length);\n    uint counter = 0;\n    for (uint i = 0; i < tasks.length; i++) {\n      if (owner == tasks[i].owner) {\n        result[counter] = tasks[i];\n        counter++;\n      }\n    }\n\n    return result;\n  }\n\n  \n}",
  "sourcePath": "/home/hayek/proyectos_personales/todo_list_defi/src/contracts/ToDo.sol",
  "ast": {
    "absolutePath": "project:/src/contracts/ToDo.sol",
    "exportedSymbols": {
      "ToDo": [
        155
      ]
    },
    "id": 156,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:33:0"
      },
      {
        "absolutePath": "project:/src/contracts/ownable.sol",
        "file": "./ownable.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 156,
        "sourceUnit": 265,
        "src": "35:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 264,
              "src": "77:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$264",
                "typeString": "contract Ownable"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "77:7:0"
          }
        ],
        "contractDependencies": [
          264
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 155,
        "linearizedBaseContracts": [
          155,
          264
        ],
        "name": "ToDo",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "ToDo.Task",
            "id": 13,
            "members": [
              {
                "constant": false,
                "id": 6,
                "name": "description",
                "nodeType": "VariableDeclaration",
                "scope": 13,
                "src": "107:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 5,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "107:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8,
                "name": "user",
                "nodeType": "VariableDeclaration",
                "scope": 13,
                "src": "131:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 7,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "131:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10,
                "name": "status",
                "nodeType": "VariableDeclaration",
                "scope": 13,
                "src": "148:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 9,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "148:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12,
                "name": "owner",
                "nodeType": "VariableDeclaration",
                "scope": 13,
                "src": "165:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 11,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "165:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Task",
            "nodeType": "StructDefinition",
            "scope": 155,
            "src": "89:94:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 16,
            "name": "tasks",
            "nodeType": "VariableDeclaration",
            "scope": 155,
            "src": "187:19:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Task_$13_storage_$dyn_storage",
              "typeString": "struct ToDo.Task[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 14,
                "name": "Task",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 13,
                "src": "187:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Task_$13_storage_ptr",
                  "typeString": "struct ToDo.Task"
                }
              },
              "id": 15,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "187:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Task_$13_storage_$dyn_storage_ptr",
                "typeString": "struct ToDo.Task[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 31,
              "nodeType": "Block",
              "src": "246:61:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 27,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 21,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 279,
                            "src": "260:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 22,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "260:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 23,
                              "name": "tasks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16,
                              "src": "274:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Task_$13_storage_$dyn_storage",
                                "typeString": "struct ToDo.Task storage ref[] storage ref"
                              }
                            },
                            "id": 25,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 24,
                              "name": "_taskId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18,
                              "src": "280:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "274:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$13_storage",
                              "typeString": "struct ToDo.Task storage ref"
                            }
                          },
                          "id": 26,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12,
                          "src": "274:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "260:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 20,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        282,
                        283
                      ],
                      "referencedDeclaration": 282,
                      "src": "252:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 28,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "252:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29,
                  "nodeType": "ExpressionStatement",
                  "src": "252:43:0"
                },
                {
                  "id": 30,
                  "nodeType": "PlaceholderStatement",
                  "src": "301:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 32,
            "name": "onlyOwnerOf",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18,
                  "name": "_taskId",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "232:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "232:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "231:14:0"
            },
            "src": "211:96:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 51,
              "nodeType": "Block",
              "src": "387:67:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 43,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "409:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 44,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "423:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 45,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "430:5:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 46,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 279,
                              "src": "437:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 47,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "437:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 42,
                          "name": "Task",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "404:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Task_$13_storage_ptr_$",
                            "typeString": "type(struct ToDo.Task storage pointer)"
                          }
                        },
                        "id": 48,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "404:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$13_memory",
                          "typeString": "struct ToDo.Task memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Task_$13_memory",
                          "typeString": "struct ToDo.Task memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 39,
                        "name": "tasks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "393:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Task_$13_storage_$dyn_storage",
                          "typeString": "struct ToDo.Task storage ref[] storage ref"
                        }
                      },
                      "id": 41,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "393:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Task_$13_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct ToDo.Task storage ref) returns (uint256)"
                      }
                    },
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "393:56:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 50,
                  "nodeType": "ExpressionStatement",
                  "src": "393:56:0"
                }
              ]
            },
            "documentation": null,
            "id": 52,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createTask",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34,
                  "name": "_description",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "331:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "331:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "359:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "359:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "330:49:0"
            },
            "returnParameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "387:0:0"
            },
            "scope": 155,
            "src": "311:143:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 77,
              "nodeType": "Block",
              "src": "512:81:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 67,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 61,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 279,
                            "src": "527:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 62,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "527:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 63,
                              "name": "tasks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16,
                              "src": "541:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Task_$13_storage_$dyn_storage",
                                "typeString": "struct ToDo.Task storage ref[] storage ref"
                              }
                            },
                            "id": 65,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 64,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "547:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "541:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$13_storage",
                              "typeString": "struct ToDo.Task storage ref"
                            }
                          },
                          "id": 66,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12,
                          "src": "541:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "527:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 60,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        282,
                        283
                      ],
                      "referencedDeclaration": 282,
                      "src": "518:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "518:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69,
                  "nodeType": "ExpressionStatement",
                  "src": "518:40:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 70,
                          "name": "tasks",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "564:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Task_$13_storage_$dyn_storage",
                            "typeString": "struct ToDo.Task storage ref[] storage ref"
                          }
                        },
                        "id": 72,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 71,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "570:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "564:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$13_storage",
                          "typeString": "struct ToDo.Task storage ref"
                        }
                      },
                      "id": 73,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "564:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 74,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "584:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "564:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 76,
                  "nodeType": "ExpressionStatement",
                  "src": "564:24:0"
                }
              ]
            },
            "documentation": null,
            "id": 78,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 57,
                    "name": "_id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 54,
                    "src": "507:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 58,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 56,
                  "name": "onlyOwnerOf",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 32,
                  "src": "495:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "495:16:0"
              }
            ],
            "name": "checkTask",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "477:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "477:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "476:11:0"
            },
            "returnParameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "512:0:0"
            },
            "scope": 155,
            "src": "458:135:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 86,
              "nodeType": "Block",
              "src": "636:23:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "642:12:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 83,
                      "name": "tasks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "649:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Task_$13_storage_$dyn_storage",
                        "typeString": "struct ToDo.Task storage ref[] storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "642:12:0"
                }
              ]
            },
            "documentation": null,
            "id": 87,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 81,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 80,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 198,
                  "src": "626:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "626:9:0"
              }
            ],
            "name": "cleanTasks",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "616:2:0"
            },
            "returnParameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "636:0:0"
            },
            "scope": 155,
            "src": "597:62:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 95,
              "nodeType": "Block",
              "src": "720:23:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 93,
                    "name": "tasks",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 16,
                    "src": "733:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Task_$13_storage_$dyn_storage",
                      "typeString": "struct ToDo.Task storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 92,
                  "id": 94,
                  "nodeType": "Return",
                  "src": "726:12:0"
                }
              ]
            },
            "documentation": null,
            "id": 96,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTasks",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "682:2:0"
            },
            "returnParameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "705:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Task_$13_memory_$dyn_memory_ptr",
                    "typeString": "struct ToDo.Task[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 89,
                      "name": "Task",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 13,
                      "src": "705:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$13_storage_ptr",
                        "typeString": "struct ToDo.Task"
                      }
                    },
                    "id": 90,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "705:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Task_$13_storage_$dyn_storage_ptr",
                      "typeString": "struct ToDo.Task[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "704:15:0"
            },
            "scope": 155,
            "src": "665:78:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 153,
              "nodeType": "Block",
              "src": "822:252:0",
              "statements": [
                {
                  "assignments": [
                    107
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 107,
                      "name": "result",
                      "nodeType": "VariableDeclaration",
                      "scope": 153,
                      "src": "828:20:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Task_$13_memory_$dyn_memory_ptr",
                        "typeString": "struct ToDo.Task[]"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 105,
                          "name": "Task",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 13,
                          "src": "828:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$13_storage_ptr",
                            "typeString": "struct ToDo.Task"
                          }
                        },
                        "id": 106,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "828:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Task_$13_storage_$dyn_storage_ptr",
                          "typeString": "struct ToDo.Task[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 114,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 111,
                          "name": "tasks",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "862:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Task_$13_storage_$dyn_storage",
                            "typeString": "struct ToDo.Task storage ref[] storage ref"
                          }
                        },
                        "id": 112,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "862:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "851:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Task_$13_memory_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (struct ToDo.Task memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 108,
                          "name": "Task",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 13,
                          "src": "855:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$13_storage_ptr",
                            "typeString": "struct ToDo.Task"
                          }
                        },
                        "id": 109,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "855:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Task_$13_storage_$dyn_storage_ptr",
                          "typeString": "struct ToDo.Task[]"
                        }
                      }
                    },
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "851:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Task_$13_memory_$dyn_memory",
                      "typeString": "struct ToDo.Task memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "828:47:0"
                },
                {
                  "assignments": [
                    116
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 116,
                      "name": "counter",
                      "nodeType": "VariableDeclaration",
                      "scope": 153,
                      "src": "881:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 115,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "881:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 118,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "896:1:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "881:16:0"
                },
                {
                  "body": {
                    "id": 149,
                    "nodeType": "Block",
                    "src": "943:107:0",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 130,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98,
                            "src": "955:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 131,
                                "name": "tasks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16,
                                "src": "964:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Task_$13_storage_$dyn_storage",
                                  "typeString": "struct ToDo.Task storage ref[] storage ref"
                                }
                              },
                              "id": 133,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 132,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 120,
                                "src": "970:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "964:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$13_storage",
                                "typeString": "struct ToDo.Task storage ref"
                              }
                            },
                            "id": 134,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12,
                            "src": "964:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "955:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 148,
                        "nodeType": "IfStatement",
                        "src": "951:93:0",
                        "trueBody": {
                          "id": 147,
                          "nodeType": "Block",
                          "src": "980:64:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 142,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 136,
                                    "name": "result",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 107,
                                    "src": "990:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Task_$13_memory_$dyn_memory_ptr",
                                      "typeString": "struct ToDo.Task memory[] memory"
                                    }
                                  },
                                  "id": 138,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 137,
                                    "name": "counter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 116,
                                    "src": "997:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "990:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$13_memory",
                                    "typeString": "struct ToDo.Task memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 139,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 16,
                                    "src": "1008:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Task_$13_storage_$dyn_storage",
                                      "typeString": "struct ToDo.Task storage ref[] storage ref"
                                    }
                                  },
                                  "id": 141,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 140,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 120,
                                    "src": "1014:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1008:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$13_storage",
                                    "typeString": "struct ToDo.Task storage ref"
                                  }
                                },
                                "src": "990:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$13_memory",
                                  "typeString": "struct ToDo.Task memory"
                                }
                              },
                              "id": 143,
                              "nodeType": "ExpressionStatement",
                              "src": "990:26:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 145,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "1026:9:0",
                                "subExpression": {
                                  "argumentTypes": null,
                                  "id": 144,
                                  "name": "counter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 116,
                                  "src": "1026:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 146,
                              "nodeType": "ExpressionStatement",
                              "src": "1026:9:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 123,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 120,
                      "src": "920:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 124,
                        "name": "tasks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "924:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Task_$13_storage_$dyn_storage",
                          "typeString": "struct ToDo.Task storage ref[] storage ref"
                        }
                      },
                      "id": 125,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "924:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "920:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 150,
                  "initializationExpression": {
                    "assignments": [
                      120
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 120,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 150,
                        "src": "908:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 119,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "908:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 122,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "917:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "908:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "938:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 127,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120,
                        "src": "938:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 129,
                    "nodeType": "ExpressionStatement",
                    "src": "938:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "903:147:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 151,
                    "name": "result",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 107,
                    "src": "1063:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Task_$13_memory_$dyn_memory_ptr",
                      "typeString": "struct ToDo.Task memory[] memory"
                    }
                  },
                  "functionReturnParameters": 103,
                  "id": 152,
                  "nodeType": "Return",
                  "src": "1056:13:0"
                }
              ]
            },
            "documentation": null,
            "id": 154,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTasksByOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 154,
                  "src": "772:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "772:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "771:15:0"
            },
            "returnParameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 154,
                  "src": "807:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Task_$13_memory_$dyn_memory_ptr",
                    "typeString": "struct ToDo.Task[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 100,
                      "name": "Task",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 13,
                      "src": "807:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$13_storage_ptr",
                        "typeString": "struct ToDo.Task"
                      }
                    },
                    "id": 101,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "807:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Task_$13_storage_$dyn_storage_ptr",
                      "typeString": "struct ToDo.Task[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "806:15:0"
            },
            "scope": 155,
            "src": "747:327:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 156,
        "src": "60:1020:0"
      }
    ],
    "src": "0:1080:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/src/contracts/ToDo.sol",
      "exportedSymbols": {
        "ToDo": [
          155
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "0:33:0"
      },
      {
        "attributes": {
          "SourceUnit": 265,
          "absolutePath": "project:/src/contracts/ownable.sol",
          "file": "./ownable.sol",
          "scope": 156,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 2,
        "name": "ImportDirective",
        "src": "35:23:0"
      },
      {
        "attributes": {
          "contractDependencies": [
            264
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            155,
            264
          ],
          "name": "ToDo",
          "scope": 156
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Ownable",
                  "referencedDeclaration": 264,
                  "type": "contract Ownable"
                },
                "id": 3,
                "name": "UserDefinedTypeName",
                "src": "77:7:0"
              }
            ],
            "id": 4,
            "name": "InheritanceSpecifier",
            "src": "77:7:0"
          },
          {
            "attributes": {
              "canonicalName": "ToDo.Task",
              "name": "Task",
              "scope": 155,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "description",
                  "scope": 13,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 5,
                    "name": "ElementaryTypeName",
                    "src": "107:6:0"
                  }
                ],
                "id": 6,
                "name": "VariableDeclaration",
                "src": "107:18:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "user",
                  "scope": 13,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 7,
                    "name": "ElementaryTypeName",
                    "src": "131:6:0"
                  }
                ],
                "id": 8,
                "name": "VariableDeclaration",
                "src": "131:11:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "status",
                  "scope": 13,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bool",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 9,
                    "name": "ElementaryTypeName",
                    "src": "148:4:0"
                  }
                ],
                "id": 10,
                "name": "VariableDeclaration",
                "src": "148:11:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "owner",
                  "scope": 13,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 11,
                    "name": "ElementaryTypeName",
                    "src": "165:7:0"
                  }
                ],
                "id": 12,
                "name": "VariableDeclaration",
                "src": "165:13:0"
              }
            ],
            "id": 13,
            "name": "StructDefinition",
            "src": "89:94:0"
          },
          {
            "attributes": {
              "constant": false,
              "name": "tasks",
              "scope": 155,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "struct ToDo.Task[]",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "length": null,
                  "type": "struct ToDo.Task[]"
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Task",
                      "referencedDeclaration": 13,
                      "type": "struct ToDo.Task"
                    },
                    "id": 14,
                    "name": "UserDefinedTypeName",
                    "src": "187:4:0"
                  }
                ],
                "id": 15,
                "name": "ArrayTypeName",
                "src": "187:6:0"
              }
            ],
            "id": 16,
            "name": "VariableDeclaration",
            "src": "187:19:0"
          },
          {
            "attributes": {
              "documentation": null,
              "name": "onlyOwnerOf",
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_taskId",
                      "scope": 32,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 17,
                        "name": "ElementaryTypeName",
                        "src": "232:4:0"
                      }
                    ],
                    "id": 18,
                    "name": "VariableDeclaration",
                    "src": "232:12:0"
                  }
                ],
                "id": 19,
                "name": "ParameterList",
                "src": "231:14:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                282,
                                283
                              ],
                              "referencedDeclaration": 282,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 20,
                            "name": "Identifier",
                            "src": "252:7:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 279,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 21,
                                    "name": "Identifier",
                                    "src": "260:3:0"
                                  }
                                ],
                                "id": 22,
                                "name": "MemberAccess",
                                "src": "260:10:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "owner",
                                  "referencedDeclaration": 12,
                                  "type": "address"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct ToDo.Task storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 16,
                                          "type": "struct ToDo.Task storage ref[] storage ref",
                                          "value": "tasks"
                                        },
                                        "id": 23,
                                        "name": "Identifier",
                                        "src": "274:5:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 18,
                                          "type": "uint256",
                                          "value": "_taskId"
                                        },
                                        "id": 24,
                                        "name": "Identifier",
                                        "src": "280:7:0"
                                      }
                                    ],
                                    "id": 25,
                                    "name": "IndexAccess",
                                    "src": "274:14:0"
                                  }
                                ],
                                "id": 26,
                                "name": "MemberAccess",
                                "src": "274:20:0"
                              }
                            ],
                            "id": 27,
                            "name": "BinaryOperation",
                            "src": "260:34:0"
                          }
                        ],
                        "id": 28,
                        "name": "FunctionCall",
                        "src": "252:43:0"
                      }
                    ],
                    "id": 29,
                    "name": "ExpressionStatement",
                    "src": "252:43:0"
                  },
                  {
                    "id": 30,
                    "name": "PlaceholderStatement",
                    "src": "301:1:0"
                  }
                ],
                "id": 31,
                "name": "Block",
                "src": "246:61:0"
              }
            ],
            "id": 32,
            "name": "ModifierDefinition",
            "src": "211:96:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "createTask",
              "scope": 155,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_description",
                      "scope": 52,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 33,
                        "name": "ElementaryTypeName",
                        "src": "331:6:0"
                      }
                    ],
                    "id": 34,
                    "name": "VariableDeclaration",
                    "src": "331:26:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_user",
                      "scope": 52,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 35,
                        "name": "ElementaryTypeName",
                        "src": "359:6:0"
                      }
                    ],
                    "id": 36,
                    "name": "VariableDeclaration",
                    "src": "359:19:0"
                  }
                ],
                "id": 37,
                "name": "ParameterList",
                "src": "330:49:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 38,
                "name": "ParameterList",
                "src": "387:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Task_$13_memory",
                                  "typeString": "struct ToDo.Task memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "referencedDeclaration": null,
                              "type": "function (struct ToDo.Task storage ref) returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 16,
                                  "type": "struct ToDo.Task storage ref[] storage ref",
                                  "value": "tasks"
                                },
                                "id": 39,
                                "name": "Identifier",
                                "src": "393:5:0"
                              }
                            ],
                            "id": 41,
                            "name": "MemberAccess",
                            "src": "393:10:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "struct ToDo.Task memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 13,
                                  "type": "type(struct ToDo.Task storage pointer)",
                                  "value": "Task"
                                },
                                "id": 42,
                                "name": "Identifier",
                                "src": "404:4:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 34,
                                  "type": "string memory",
                                  "value": "_description"
                                },
                                "id": 43,
                                "name": "Identifier",
                                "src": "409:12:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 36,
                                  "type": "string memory",
                                  "value": "_user"
                                },
                                "id": 44,
                                "name": "Identifier",
                                "src": "423:5:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "66616c7365",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "false"
                                },
                                "id": 45,
                                "name": "Literal",
                                "src": "430:5:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 279,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 46,
                                    "name": "Identifier",
                                    "src": "437:3:0"
                                  }
                                ],
                                "id": 47,
                                "name": "MemberAccess",
                                "src": "437:10:0"
                              }
                            ],
                            "id": 48,
                            "name": "FunctionCall",
                            "src": "404:44:0"
                          }
                        ],
                        "id": 49,
                        "name": "FunctionCall",
                        "src": "393:56:0"
                      }
                    ],
                    "id": 50,
                    "name": "ExpressionStatement",
                    "src": "393:56:0"
                  }
                ],
                "id": 51,
                "name": "Block",
                "src": "387:67:0"
              }
            ],
            "id": 52,
            "name": "FunctionDefinition",
            "src": "311:143:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "checkTask",
              "scope": 155,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_id",
                      "scope": 78,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint8",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint8",
                          "type": "uint8"
                        },
                        "id": 53,
                        "name": "ElementaryTypeName",
                        "src": "477:5:0"
                      }
                    ],
                    "id": 54,
                    "name": "VariableDeclaration",
                    "src": "477:9:0"
                  }
                ],
                "id": 55,
                "name": "ParameterList",
                "src": "476:11:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 59,
                "name": "ParameterList",
                "src": "512:0:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 32,
                      "type": "modifier (uint256)",
                      "value": "onlyOwnerOf"
                    },
                    "id": 56,
                    "name": "Identifier",
                    "src": "495:11:0"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 54,
                      "type": "uint8",
                      "value": "_id"
                    },
                    "id": 57,
                    "name": "Identifier",
                    "src": "507:3:0"
                  }
                ],
                "id": 58,
                "name": "ModifierInvocation",
                "src": "495:16:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                282,
                                283
                              ],
                              "referencedDeclaration": 282,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 60,
                            "name": "Identifier",
                            "src": "518:7:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 279,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 61,
                                    "name": "Identifier",
                                    "src": "527:3:0"
                                  }
                                ],
                                "id": 62,
                                "name": "MemberAccess",
                                "src": "527:10:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "owner",
                                  "referencedDeclaration": 12,
                                  "type": "address"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct ToDo.Task storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 16,
                                          "type": "struct ToDo.Task storage ref[] storage ref",
                                          "value": "tasks"
                                        },
                                        "id": 63,
                                        "name": "Identifier",
                                        "src": "541:5:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 54,
                                          "type": "uint8",
                                          "value": "_id"
                                        },
                                        "id": 64,
                                        "name": "Identifier",
                                        "src": "547:3:0"
                                      }
                                    ],
                                    "id": 65,
                                    "name": "IndexAccess",
                                    "src": "541:10:0"
                                  }
                                ],
                                "id": 66,
                                "name": "MemberAccess",
                                "src": "541:16:0"
                              }
                            ],
                            "id": 67,
                            "name": "BinaryOperation",
                            "src": "527:30:0"
                          }
                        ],
                        "id": 68,
                        "name": "FunctionCall",
                        "src": "518:40:0"
                      }
                    ],
                    "id": 69,
                    "name": "ExpressionStatement",
                    "src": "518:40:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "status",
                              "referencedDeclaration": 10,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct ToDo.Task storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 16,
                                      "type": "struct ToDo.Task storage ref[] storage ref",
                                      "value": "tasks"
                                    },
                                    "id": 70,
                                    "name": "Identifier",
                                    "src": "564:5:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 54,
                                      "type": "uint8",
                                      "value": "_id"
                                    },
                                    "id": 71,
                                    "name": "Identifier",
                                    "src": "570:3:0"
                                  }
                                ],
                                "id": 72,
                                "name": "IndexAccess",
                                "src": "564:10:0"
                              }
                            ],
                            "id": 73,
                            "name": "MemberAccess",
                            "src": "564:17:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 74,
                            "name": "Literal",
                            "src": "584:4:0"
                          }
                        ],
                        "id": 75,
                        "name": "Assignment",
                        "src": "564:24:0"
                      }
                    ],
                    "id": 76,
                    "name": "ExpressionStatement",
                    "src": "564:24:0"
                  }
                ],
                "id": 77,
                "name": "Block",
                "src": "512:81:0"
              }
            ],
            "id": 78,
            "name": "FunctionDefinition",
            "src": "458:135:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "cleanTasks",
              "scope": 155,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 79,
                "name": "ParameterList",
                "src": "616:2:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 82,
                "name": "ParameterList",
                "src": "636:0:0"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 198,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 80,
                    "name": "Identifier",
                    "src": "626:9:0"
                  }
                ],
                "id": 81,
                "name": "ModifierInvocation",
                "src": "626:9:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "delete",
                          "prefix": true,
                          "type": "tuple()"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 16,
                              "type": "struct ToDo.Task storage ref[] storage ref",
                              "value": "tasks"
                            },
                            "id": 83,
                            "name": "Identifier",
                            "src": "649:5:0"
                          }
                        ],
                        "id": 84,
                        "name": "UnaryOperation",
                        "src": "642:12:0"
                      }
                    ],
                    "id": 85,
                    "name": "ExpressionStatement",
                    "src": "642:12:0"
                  }
                ],
                "id": 86,
                "name": "Block",
                "src": "636:23:0"
              }
            ],
            "id": 87,
            "name": "FunctionDefinition",
            "src": "597:62:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getTasks",
              "scope": 155,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 88,
                "name": "ParameterList",
                "src": "682:2:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 96,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct ToDo.Task[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "struct ToDo.Task[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Task",
                              "referencedDeclaration": 13,
                              "type": "struct ToDo.Task"
                            },
                            "id": 89,
                            "name": "UserDefinedTypeName",
                            "src": "705:4:0"
                          }
                        ],
                        "id": 90,
                        "name": "ArrayTypeName",
                        "src": "705:6:0"
                      }
                    ],
                    "id": 91,
                    "name": "VariableDeclaration",
                    "src": "705:13:0"
                  }
                ],
                "id": 92,
                "name": "ParameterList",
                "src": "704:15:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 92
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 16,
                          "type": "struct ToDo.Task storage ref[] storage ref",
                          "value": "tasks"
                        },
                        "id": 93,
                        "name": "Identifier",
                        "src": "733:5:0"
                      }
                    ],
                    "id": 94,
                    "name": "Return",
                    "src": "726:12:0"
                  }
                ],
                "id": 95,
                "name": "Block",
                "src": "720:23:0"
              }
            ],
            "id": 96,
            "name": "FunctionDefinition",
            "src": "665:78:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getTasksByOwner",
              "scope": 155,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "owner",
                      "scope": 154,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 97,
                        "name": "ElementaryTypeName",
                        "src": "772:7:0"
                      }
                    ],
                    "id": 98,
                    "name": "VariableDeclaration",
                    "src": "772:13:0"
                  }
                ],
                "id": 99,
                "name": "ParameterList",
                "src": "771:15:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 154,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct ToDo.Task[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "struct ToDo.Task[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Task",
                              "referencedDeclaration": 13,
                              "type": "struct ToDo.Task"
                            },
                            "id": 100,
                            "name": "UserDefinedTypeName",
                            "src": "807:4:0"
                          }
                        ],
                        "id": 101,
                        "name": "ArrayTypeName",
                        "src": "807:6:0"
                      }
                    ],
                    "id": 102,
                    "name": "VariableDeclaration",
                    "src": "807:13:0"
                  }
                ],
                "id": 103,
                "name": "ParameterList",
                "src": "806:15:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        107
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "result",
                          "scope": 153,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct ToDo.Task[]",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "length": null,
                              "type": "struct ToDo.Task[]"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "contractScope": null,
                                  "name": "Task",
                                  "referencedDeclaration": 13,
                                  "type": "struct ToDo.Task"
                                },
                                "id": 105,
                                "name": "UserDefinedTypeName",
                                "src": "828:4:0"
                              }
                            ],
                            "id": 106,
                            "name": "ArrayTypeName",
                            "src": "828:6:0"
                          }
                        ],
                        "id": 107,
                        "name": "VariableDeclaration",
                        "src": "828:20:0"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "struct ToDo.Task memory[] memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "type": "function (uint256) pure returns (struct ToDo.Task memory[] memory)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "length": null,
                                  "type": "struct ToDo.Task[]"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "contractScope": null,
                                      "name": "Task",
                                      "referencedDeclaration": 13,
                                      "type": "struct ToDo.Task"
                                    },
                                    "id": 108,
                                    "name": "UserDefinedTypeName",
                                    "src": "855:4:0"
                                  }
                                ],
                                "id": 109,
                                "name": "ArrayTypeName",
                                "src": "855:6:0"
                              }
                            ],
                            "id": 110,
                            "name": "NewExpression",
                            "src": "851:10:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 16,
                                  "type": "struct ToDo.Task storage ref[] storage ref",
                                  "value": "tasks"
                                },
                                "id": 111,
                                "name": "Identifier",
                                "src": "862:5:0"
                              }
                            ],
                            "id": 112,
                            "name": "MemberAccess",
                            "src": "862:12:0"
                          }
                        ],
                        "id": 113,
                        "name": "FunctionCall",
                        "src": "851:24:0"
                      }
                    ],
                    "id": 114,
                    "name": "VariableDeclarationStatement",
                    "src": "828:47:0"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        116
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "counter",
                          "scope": 153,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 115,
                            "name": "ElementaryTypeName",
                            "src": "881:4:0"
                          }
                        ],
                        "id": 116,
                        "name": "VariableDeclaration",
                        "src": "881:12:0"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "30",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "number",
                          "type": "int_const 0",
                          "value": "0"
                        },
                        "id": 117,
                        "name": "Literal",
                        "src": "896:1:0"
                      }
                    ],
                    "id": 118,
                    "name": "VariableDeclarationStatement",
                    "src": "881:16:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            120
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "name": "i",
                              "scope": 150,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "value": null,
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint",
                                  "type": "uint256"
                                },
                                "id": 119,
                                "name": "ElementaryTypeName",
                                "src": "908:4:0"
                              }
                            ],
                            "id": 120,
                            "name": "VariableDeclaration",
                            "src": "908:6:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 121,
                            "name": "Literal",
                            "src": "917:1:0"
                          }
                        ],
                        "id": 122,
                        "name": "VariableDeclarationStatement",
                        "src": "908:10:0"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 120,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 123,
                            "name": "Identifier",
                            "src": "920:1:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 16,
                                  "type": "struct ToDo.Task storage ref[] storage ref",
                                  "value": "tasks"
                                },
                                "id": 124,
                                "name": "Identifier",
                                "src": "924:5:0"
                              }
                            ],
                            "id": 125,
                            "name": "MemberAccess",
                            "src": "924:12:0"
                          }
                        ],
                        "id": 126,
                        "name": "BinaryOperation",
                        "src": "920:16:0"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 120,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 127,
                                "name": "Identifier",
                                "src": "938:1:0"
                              }
                            ],
                            "id": 128,
                            "name": "UnaryOperation",
                            "src": "938:3:0"
                          }
                        ],
                        "id": 129,
                        "name": "ExpressionStatement",
                        "src": "938:3:0"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "falseBody": null
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "==",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 98,
                                      "type": "address",
                                      "value": "owner"
                                    },
                                    "id": 130,
                                    "name": "Identifier",
                                    "src": "955:5:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "owner",
                                      "referencedDeclaration": 12,
                                      "type": "address"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct ToDo.Task storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 16,
                                              "type": "struct ToDo.Task storage ref[] storage ref",
                                              "value": "tasks"
                                            },
                                            "id": 131,
                                            "name": "Identifier",
                                            "src": "964:5:0"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 120,
                                              "type": "uint256",
                                              "value": "i"
                                            },
                                            "id": 132,
                                            "name": "Identifier",
                                            "src": "970:1:0"
                                          }
                                        ],
                                        "id": 133,
                                        "name": "IndexAccess",
                                        "src": "964:8:0"
                                      }
                                    ],
                                    "id": 134,
                                    "name": "MemberAccess",
                                    "src": "964:14:0"
                                  }
                                ],
                                "id": 135,
                                "name": "BinaryOperation",
                                "src": "955:23:0"
                              },
                              {
                                "children": [
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "=",
                                          "type": "struct ToDo.Task memory"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "type": "struct ToDo.Task memory"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 107,
                                                  "type": "struct ToDo.Task memory[] memory",
                                                  "value": "result"
                                                },
                                                "id": 136,
                                                "name": "Identifier",
                                                "src": "990:6:0"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 116,
                                                  "type": "uint256",
                                                  "value": "counter"
                                                },
                                                "id": 137,
                                                "name": "Identifier",
                                                "src": "997:7:0"
                                              }
                                            ],
                                            "id": 138,
                                            "name": "IndexAccess",
                                            "src": "990:15:0"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct ToDo.Task storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 16,
                                                  "type": "struct ToDo.Task storage ref[] storage ref",
                                                  "value": "tasks"
                                                },
                                                "id": 139,
                                                "name": "Identifier",
                                                "src": "1008:5:0"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 120,
                                                  "type": "uint256",
                                                  "value": "i"
                                                },
                                                "id": 140,
                                                "name": "Identifier",
                                                "src": "1014:1:0"
                                              }
                                            ],
                                            "id": 141,
                                            "name": "IndexAccess",
                                            "src": "1008:8:0"
                                          }
                                        ],
                                        "id": 142,
                                        "name": "Assignment",
                                        "src": "990:26:0"
                                      }
                                    ],
                                    "id": 143,
                                    "name": "ExpressionStatement",
                                    "src": "990:26:0"
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "++",
                                          "prefix": false,
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 116,
                                              "type": "uint256",
                                              "value": "counter"
                                            },
                                            "id": 144,
                                            "name": "Identifier",
                                            "src": "1026:7:0"
                                          }
                                        ],
                                        "id": 145,
                                        "name": "UnaryOperation",
                                        "src": "1026:9:0"
                                      }
                                    ],
                                    "id": 146,
                                    "name": "ExpressionStatement",
                                    "src": "1026:9:0"
                                  }
                                ],
                                "id": 147,
                                "name": "Block",
                                "src": "980:64:0"
                              }
                            ],
                            "id": 148,
                            "name": "IfStatement",
                            "src": "951:93:0"
                          }
                        ],
                        "id": 149,
                        "name": "Block",
                        "src": "943:107:0"
                      }
                    ],
                    "id": 150,
                    "name": "ForStatement",
                    "src": "903:147:0"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 103
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 107,
                          "type": "struct ToDo.Task memory[] memory",
                          "value": "result"
                        },
                        "id": 151,
                        "name": "Identifier",
                        "src": "1063:6:0"
                      }
                    ],
                    "id": 152,
                    "name": "Return",
                    "src": "1056:13:0"
                  }
                ],
                "id": 153,
                "name": "Block",
                "src": "822:252:0"
              }
            ],
            "id": 154,
            "name": "FunctionDefinition",
            "src": "747:327:0"
          }
        ],
        "id": 155,
        "name": "ContractDefinition",
        "src": "60:1020:0"
      }
    ],
    "id": 156,
    "name": "SourceUnit",
    "src": "0:1080:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "1648980848660": {
      "events": {},
      "links": {},
      "address": "0xb09bCc172050fBd4562da8b229Cf3E45Dc3045A6",
      "transactionHash": "0x0e3b337e29b5705bb628c750ef4e2d0eb7e8dc485685ff79d206759a8f90253a"
    },
    "1648983666495": {
      "events": {},
      "links": {},
      "address": "0x734Fc3BeB0f8F11D94048c125Bc1b218B09a9c44",
      "transactionHash": "0x0bccf44bfc2069c73c82ff044a0a7cdd89b39ce5afc1134a909446954ea53df3"
    },
    "1648995768935": {
      "events": {},
      "links": {},
      "address": "0xDb56f2e9369E0D7bD191099125a3f6C370F8ed15",
      "transactionHash": "0x51a21bcc5d953384b6fe8d6e0e993e1e8266c42b19ba89f21b9e8b4c1c731240"
    },
    "1649185141211": {
      "events": {},
      "links": {},
      "address": "0xCfEB869F69431e42cdB54A4F4f105C19C080A601",
      "transactionHash": "0x99817c62074bb43b8b0ee6db8d7bfa296cbc366cc2b06c6ce440b3f12b13e9c4"
    },
    "1649188078171": {
      "events": {},
      "links": {},
      "address": "0x254dffcd3277C0b1660F6d42EFbB754edaBAbC2B",
      "transactionHash": "0x27fcd36f9ab09c0962c8774c406461b788c69467d4884652238419ca701b52be"
    },
    "1649208650500": {
      "events": {},
      "links": {},
      "address": "0xd0fef44a2f2467429f8620444aDAdD37247114EF",
      "transactionHash": "0x1e8484b1639c94a19ed74eab4eaffd4f62d0ba14a5d65dfa003131098f894d02"
    },
    "1649449994002": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xb09bCc172050fBd4562da8b229Cf3E45Dc3045A6",
      "transactionHash": "0x1f30a8c1f7925d6d214c29632b62518ae78337102b1a22187e4124560888936e"
    }
  },
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-04-08T20:51:55.677Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}