{
  "contractName": "ToDo",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tasks",
      "outputs": [
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "user",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_user",
          "type": "string"
        }
      ],
      "name": "createTask",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_id",
          "type": "uint8"
        }
      ],
      "name": "checkTask",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "cleanTasks",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTasks",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "user",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "status",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "internalType": "struct ToDo.Task[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "getTasksByOwner",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "user",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "status",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "internalType": "struct ToDo.Task[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_id\",\"type\":\"uint8\"}],\"name\":\"checkTask\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"cleanTasks\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_user\",\"type\":\"string\"}],\"name\":\"createTask\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTasks\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"user\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"internalType\":\"struct ToDo.Task[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getTasksByOwner\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"user\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"internalType\":\"struct ToDo.Task[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tasks\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"user\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/src/contracts/ToDo.sol\":\"ToDo\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/src/contracts/ToDo.sol\":{\"keccak256\":\"0xdf34241f9ed106958db6894173c691d0227874d1f786d91f24f6f4dead8847c7\",\"urls\":[\"bzz-raw://8f74b95e50f8281a5b841ec2e9ed71cc04029f6f9ee377950431013a7b966786\",\"dweb:/ipfs/QmYUNQifzu6t9gq9dyzafnMRdD8kQduQpDEwWUhJpccZfU\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c806304a87e3814610067578063292a4585146100855780632e99a9e5146100a15780638d977672146100ab578063e65141e4146100de578063f0f39ce4146100fa575b600080fd5b61006f61012a565b60405161007c9190610dfb565b60405180910390f35b61009f600480360361009a9190810190610b9c565b61033e565b005b6100a961044d565b005b6100c560048036036100c09190810190610c08565b61045c565b6040516100d59493929190610e1d565b60405180910390f35b6100f860048036036100f39190810190610c31565b6105f6565b005b610114600480360361010f9190810190610b73565b610633565b6040516101219190610dfb565b60405180910390f35b60606000805480602002602001604051908101604052809291908181526020016000905b828210156103355783829060005260206000209060030201604051806080016040529081600082018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561020a5780601f106101df5761010080835404028352916020019161020a565b820191906000526020600020905b8154815290600101906020018083116101ed57829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102ac5780601f10610281576101008083540402835291602001916102ac565b820191906000526020600020905b81548152906001019060200180831161028f57829003601f168201915b505050505081526020016002820160009054906101000a900460ff161515151581526020016002820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250508152602001906001019061014e565b50505050905090565b600060405180608001604052808481526020018381526020016000151581526020013373ffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050906001820390600052602060002090600302016000909192909190915060008201518160000190805190602001906103c1929190610915565b5060208201518160010190805190602001906103de929190610915565b5060408201518160020160006101000a81548160ff02191690831515021790555060608201518160020160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b60008061045a9190610995565b565b6000818154811061046957fe5b9060005260206000209060030201600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105155780601f106104ea57610100808354040283529160200191610515565b820191906000526020600020905b8154815290600101906020018083116104f857829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105b35780601f10610588576101008083540402835291602001916105b3565b820191906000526020600020905b81548152906001019060200180831161059657829003601f168201915b5050505050908060020160009054906101000a900460ff16908060020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b600160008260ff168154811061060857fe5b906000526020600020906003020160020160006101000a81548160ff02191690831515021790555050565b60608060008054905060405190808252806020026020018201604052801561067557816020015b6106626109b9565b81526020019060019003908161065a5790505b509050600080905060008090505b60008054905081101561090a576000818154811061069d57fe5b906000526020600020906003020160020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614156108fd576000818154811061070f57fe5b9060005260206000209060030201604051806080016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107c15780601f10610796576101008083540402835291602001916107c1565b820191906000526020600020905b8154815290600101906020018083116107a457829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108635780601f1061083857610100808354040283529160200191610863565b820191906000526020600020905b81548152906001019060200180831161084657829003601f168201915b505050505081526020016002820160009054906101000a900460ff161515151581526020016002820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250508383815181106108e957fe5b602002602001018190525081806001019250505b8080600101915050610683565b508192505050919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061095657805160ff1916838001178555610984565b82800160010185558215610984579182015b82811115610983578251825591602001919060010190610968565b5b50905061099191906109f9565b5090565b50805460008255600302906000526020600020908101906109b69190610a1e565b50565b60405180608001604052806060815260200160608152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b610a1b91905b80821115610a175760008160009055506001016109ff565b5090565b90565b610a9591905b80821115610a915760008082016000610a3d9190610a98565b600182016000610a4d9190610a98565b6002820160006101000a81549060ff02191690556002820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600301610a24565b5090565b90565b50805460018160011615610100020316600290046000825580601f10610abe5750610add565b601f016020900490600052602060002090810190610adc91906109f9565b5b50565b600081359050610aef81610fd7565b92915050565b600082601f830112610b0657600080fd5b8135610b19610b1482610e9d565b610e70565b91508082526020830160208301858383011115610b3557600080fd5b610b40838284610f84565b50505092915050565b600081359050610b5881610fee565b92915050565b600081359050610b6d81611005565b92915050565b600060208284031215610b8557600080fd5b6000610b9384828501610ae0565b91505092915050565b60008060408385031215610baf57600080fd5b600083013567ffffffffffffffff811115610bc957600080fd5b610bd585828601610af5565b925050602083013567ffffffffffffffff811115610bf257600080fd5b610bfe85828601610af5565b9150509250929050565b600060208284031215610c1a57600080fd5b6000610c2884828501610b49565b91505092915050565b600060208284031215610c4357600080fd5b6000610c5184828501610b5e565b91505092915050565b6000610c668383610d91565b905092915050565b610c7781610f2f565b82525050565b610c8681610f2f565b82525050565b6000610c9782610ed9565b610ca18185610efc565b935083602082028501610cb385610ec9565b8060005b85811015610cef5784840389528151610cd08582610c5a565b9450610cdb83610eef565b925060208a01995050600181019050610cb7565b50829750879550505050505092915050565b610d0a81610f41565b82525050565b610d1981610f41565b82525050565b6000610d2a82610ee4565b610d348185610f0d565b9350610d44818560208601610f93565b610d4d81610fc6565b840191505092915050565b6000610d6382610ee4565b610d6d8185610f1e565b9350610d7d818560208601610f93565b610d8681610fc6565b840191505092915050565b60006080830160008301518482036000860152610dae8282610d1f565b91505060208301518482036020860152610dc88282610d1f565b9150506040830151610ddd6040860182610d01565b506060830151610df06060860182610c6e565b508091505092915050565b60006020820190508181036000830152610e158184610c8c565b905092915050565b60006080820190508181036000830152610e378187610d58565b90508181036020830152610e4b8186610d58565b9050610e5a6040830185610d10565b610e676060830184610c7d565b95945050505050565b6000604051905081810181811067ffffffffffffffff82111715610e9357600080fd5b8060405250919050565b600067ffffffffffffffff821115610eb457600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610f3a82610f4d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b83811015610fb1578082015181840152602081019050610f96565b83811115610fc0576000848401525b50505050565b6000601f19601f8301169050919050565b610fe081610f2f565b8114610feb57600080fd5b50565b610ff781610f6d565b811461100257600080fd5b50565b61100e81610f77565b811461101957600080fd5b5056fea365627a7a723158207b5cb3ef59df70a3b9d47993b9934dce1562861c5e5905ee24835da914cd9dc26c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "35:838:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;35:838:0;;;;;;;",
  "deployedSourceMap": "35:838:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;35:838:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;456:78;;;:::i;:::-;;;;;;;;;;;;;;;;175:143;;;;;;;;;;;;;;;;:::i;:::-;;398:52;;;:::i;:::-;;151:19;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;322:72;;;;;;;;;;;;;;;;:::i;:::-;;538:329;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;456:78;496:13;524:5;517:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;456:78;:::o;175:143::-;257:5;268:44;;;;;;;;273:12;268:44;;;;287:5;268:44;;;;294:5;268:44;;;;;;301:10;268:44;;;;;257:56;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;257:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;175:143;;:::o;398:52::-;440:5;;433:12;;;;:::i;:::-;398:52::o;151:19::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;322:72::-;385:4;365:5;371:3;365:10;;;;;;;;;;;;;;;;;;;;:17;;;:24;;;;;;;;;;;;;;;;;;322:72;:::o;538:329::-;600:13;621:20;655:5;:12;;;;644:24;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;621:47;;674:12;689:1;674:16;;701:6;710:1;701:10;;696:147;717:5;:12;;;;713:1;:16;696:147;;;757:5;763:1;757:8;;;;;;;;;;;;;;;;;;:14;;;;;;;;;;;;748:23;;:5;:23;;;744:93;;;801:5;807:1;801:8;;;;;;;;;;;;;;;;;;783:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:6;790:7;783:15;;;;;;;;;;;;;:26;;;;819:9;;;;;;;744:93;731:3;;;;;;;696:147;;;;856:6;849:13;;;;538:329;;;:::o;35:838::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;143:442;;245:3;238:4;230:6;226:17;222:27;212:2;;263:1;260;253:12;212:2;300:6;287:20;322:65;337:49;379:6;337:49;;;322:65;;;313:74;;407:6;400:5;393:21;443:4;435:6;431:17;476:4;469:5;465:16;511:3;502:6;497:3;493:16;490:25;487:2;;;528:1;525;518:12;487:2;538:41;572:6;567:3;562;538:41;;;205:380;;;;;;;;593:130;;673:6;660:20;651:29;;685:33;712:5;685:33;;;645:78;;;;;730:126;;808:6;795:20;786:29;;820:31;845:5;820:31;;;780:76;;;;;863:241;;967:2;955:9;946:7;942:23;938:32;935:2;;;983:1;980;973:12;935:2;1018:1;1035:53;1080:7;1071:6;1060:9;1056:22;1035:53;;;1025:63;;997:97;929:175;;;;;1111:578;;;1252:2;1240:9;1231:7;1227:23;1223:32;1220:2;;;1268:1;1265;1258:12;1220:2;1331:1;1320:9;1316:17;1303:31;1354:18;1346:6;1343:30;1340:2;;;1386:1;1383;1376:12;1340:2;1406:63;1461:7;1452:6;1441:9;1437:22;1406:63;;;1396:73;;1282:193;1534:2;1523:9;1519:18;1506:32;1558:18;1550:6;1547:30;1544:2;;;1590:1;1587;1580:12;1544:2;1610:63;1665:7;1656:6;1645:9;1641:22;1610:63;;;1600:73;;1485:194;1214:475;;;;;;1696:241;;1800:2;1788:9;1779:7;1775:23;1771:32;1768:2;;;1816:1;1813;1806:12;1768:2;1851:1;1868:53;1913:7;1904:6;1893:9;1889:22;1868:53;;;1858:63;;1830:97;1762:175;;;;;1944:237;;2046:2;2034:9;2025:7;2021:23;2017:32;2014:2;;;2062:1;2059;2052:12;2014:2;2097:1;2114:51;2157:7;2148:6;2137:9;2133:22;2114:51;;;2104:61;;2076:95;2008:173;;;;;2189:221;;2322:82;2400:3;2392:6;2322:82;;;2308:96;;2301:109;;;;;2418:103;2491:24;2509:5;2491:24;;;2486:3;2479:37;2473:48;;;2528:113;2611:24;2629:5;2611:24;;;2606:3;2599:37;2593:48;;;2697:976;;2874:70;2938:5;2874:70;;;2957:102;3052:6;3047:3;2957:102;;;2950:109;;3082:3;3124:4;3116:6;3112:17;3107:3;3103:27;3151:72;3217:5;3151:72;;;3243:7;3271:1;3256:378;3281:6;3278:1;3275:13;3256:378;;;3343:9;3337:4;3333:20;3328:3;3321:33;3388:6;3382:13;3410:96;3501:4;3486:13;3410:96;;;3402:104;;3523:76;3592:6;3523:76;;;3513:86;;3622:4;3617:3;3613:14;3606:21;;3313:321;3303:1;3300;3296:9;3291:14;;3256:378;;;3260:14;3647:4;3640:11;;3664:3;3657:10;;2853:820;;;;;;;;;;3681:94;3748:21;3763:5;3748:21;;;3743:3;3736:34;3730:45;;;3782:104;3859:21;3874:5;3859:21;;;3854:3;3847:34;3841:45;;;3893:319;;3991:35;4020:5;3991:35;;;4038:61;4092:6;4087:3;4038:61;;;4031:68;;4104:52;4149:6;4144:3;4137:4;4130:5;4126:16;4104:52;;;4177:29;4199:6;4177:29;;;4172:3;4168:39;4161:46;;3971:241;;;;;;4219:339;;4327:35;4356:5;4327:35;;;4374:71;4438:6;4433:3;4374:71;;;4367:78;;4450:52;4495:6;4490:3;4483:4;4476:5;4472:16;4450:52;;;4523:29;4545:6;4523:29;;;4518:3;4514:39;4507:46;;4307:251;;;;;;4608:927;;4735:4;4730:3;4726:14;4825:4;4818:5;4814:16;4808:23;4877:3;4871:4;4867:14;4860:4;4855:3;4851:14;4844:38;4897:69;4961:4;4947:12;4897:69;;;4889:77;;4755:223;5051:4;5044:5;5040:16;5034:23;5103:3;5097:4;5093:14;5086:4;5081:3;5077:14;5070:38;5123:69;5187:4;5173:12;5123:69;;;5115:77;;4988:216;5279:4;5272:5;5268:16;5262:23;5291:57;5342:4;5337:3;5333:14;5319:12;5291:57;;;5214:140;5428:4;5421:5;5417:16;5411:23;5440:63;5497:4;5492:3;5488:14;5474:12;5440:63;;;5364:145;5526:4;5519:11;;4708:827;;;;;;5542:425;;5742:2;5731:9;5727:18;5719:26;;5792:9;5786:4;5782:20;5778:1;5767:9;5763:17;5756:47;5817:140;5952:4;5943:6;5817:140;;;5809:148;;5713:254;;;;;5974:695;;6202:3;6191:9;6187:19;6179:27;;6253:9;6247:4;6243:20;6239:1;6228:9;6224:17;6217:47;6278:74;6347:4;6338:6;6278:74;;;6270:82;;6400:9;6394:4;6390:20;6385:2;6374:9;6370:18;6363:48;6425:74;6494:4;6485:6;6425:74;;;6417:82;;6510:66;6572:2;6561:9;6557:18;6548:6;6510:66;;;6587:72;6655:2;6644:9;6640:18;6631:6;6587:72;;;6173:496;;;;;;;;6676:256;;6738:2;6732:9;6722:19;;6776:4;6768:6;6764:17;6875:6;6863:10;6860:22;6839:18;6827:10;6824:34;6821:62;6818:2;;;6896:1;6893;6886:12;6818:2;6916:10;6912:2;6905:22;6716:216;;;;;6939:322;;7083:18;7075:6;7072:30;7069:2;;;7115:1;7112;7105:12;7069:2;7182:4;7178:9;7171:4;7163:6;7159:17;7155:33;7147:41;;7246:4;7240;7236:15;7228:23;;7006:255;;;;7268:167;;7370:3;7362:11;;7408:4;7403:3;7399:14;7391:22;;7356:79;;;;7442:153;;7567:5;7561:12;7551:22;;7532:63;;;;7602:118;;7692:5;7686:12;7676:22;;7657:63;;;;7727:124;;7841:4;7836:3;7832:14;7824:22;;7818:33;;;;7859:194;;8005:6;8000:3;7993:19;8042:4;8037:3;8033:14;8018:29;;7986:67;;;;;8062:153;;8167:6;8162:3;8155:19;8204:4;8199:3;8195:14;8180:29;;8148:67;;;;;8224:163;;8339:6;8334:3;8327:19;8376:4;8371:3;8367:14;8352:29;;8320:67;;;;;8395:91;;8457:24;8475:5;8457:24;;;8446:35;;8440:46;;;;8493:85;;8566:5;8559:13;8552:21;8541:32;;8535:43;;;;8585:121;;8658:42;8651:5;8647:54;8636:65;;8630:76;;;;8713:72;;8775:5;8764:16;;8758:27;;;;8792:81;;8863:4;8856:5;8852:16;8841:27;;8835:38;;;;8881:145;8962:6;8957:3;8952;8939:30;9018:1;9009:6;9004:3;9000:16;8993:27;8932:94;;;;9035:268;9100:1;9107:101;9121:6;9118:1;9115:13;9107:101;;;9197:1;9192:3;9188:11;9182:18;9178:1;9173:3;9169:11;9162:39;9143:2;9140:1;9136:10;9131:15;;9107:101;;;9223:6;9220:1;9217:13;9214:2;;;9288:1;9279:6;9274:3;9270:16;9263:27;9214:2;9084:219;;;;;9311:97;;9399:2;9395:7;9390:2;9383:5;9379:14;9375:28;9365:38;;9359:49;;;;9416:117;9485:24;9503:5;9485:24;;;9478:5;9475:35;9465:2;;9524:1;9521;9514:12;9465:2;9459:74;;9540:117;9609:24;9627:5;9609:24;;;9602:5;9599:35;9589:2;;9648:1;9645;9638:12;9589:2;9583:74;;9664:113;9731:22;9747:5;9731:22;;;9724:5;9721:33;9711:2;;9768:1;9765;9758:12;9711:2;9705:72;",
  "source": "pragma experimental ABIEncoderV2;\n\ncontract ToDo {\n  struct Task {\n    string description;\n    string user;\n    bool status;\n    address owner;\n  }\n\n  Task[] public tasks;\n\n  function createTask(string memory _description, string memory _user) public {\n    tasks.push(Task(_description, _user, false, msg.sender));\n  }\n\n  function checkTask(uint8 _id) public {\n    tasks[_id].status = true;\n  }\n\n  function cleanTasks() public {\n    delete tasks;\n  }\n  \n  function getTasks() public view returns(Task[] memory) {\n    return tasks;\n  }\n\n  function getTasksByOwner(address owner) external view returns(Task[] memory) {\n    Task[] memory result = new Task[](tasks.length);\n    uint counter = 0;\n    for (uint i = 0; i < tasks.length; i++) {\n      if (owner == tasks[i].owner) {\n        result[counter] = tasks[i];\n        counter++;\n      }\n    }\n\n    return result;\n  }\n\n  \n}",
  "sourcePath": "/home/hayek/proyectos_personales/todo_list_defi/src/contracts/ToDo.sol",
  "ast": {
    "absolutePath": "project:/src/contracts/ToDo.sol",
    "exportedSymbols": {
      "ToDo": [
        121
      ]
    },
    "id": 122,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:33:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 121,
        "linearizedBaseContracts": [
          121
        ],
        "name": "ToDo",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "ToDo.Task",
            "id": 10,
            "members": [
              {
                "constant": false,
                "id": 3,
                "name": "description",
                "nodeType": "VariableDeclaration",
                "scope": 10,
                "src": "71:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 2,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "71:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 5,
                "name": "user",
                "nodeType": "VariableDeclaration",
                "scope": 10,
                "src": "95:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 4,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "95:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7,
                "name": "status",
                "nodeType": "VariableDeclaration",
                "scope": 10,
                "src": "112:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 6,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "112:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9,
                "name": "owner",
                "nodeType": "VariableDeclaration",
                "scope": 10,
                "src": "129:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 8,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "129:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Task",
            "nodeType": "StructDefinition",
            "scope": 121,
            "src": "53:94:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 13,
            "name": "tasks",
            "nodeType": "VariableDeclaration",
            "scope": 121,
            "src": "151:19:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Task_$10_storage_$dyn_storage",
              "typeString": "struct ToDo.Task[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 11,
                "name": "Task",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 10,
                "src": "151:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Task_$10_storage_ptr",
                  "typeString": "struct ToDo.Task"
                }
              },
              "id": 12,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "151:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Task_$10_storage_$dyn_storage_ptr",
                "typeString": "struct ToDo.Task[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 32,
              "nodeType": "Block",
              "src": "251:67:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 24,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "273:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 25,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "287:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 26,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "294:5:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 27,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 136,
                              "src": "301:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 28,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "301:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 23,
                          "name": "Task",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "268:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Task_$10_storage_ptr_$",
                            "typeString": "type(struct ToDo.Task storage pointer)"
                          }
                        },
                        "id": 29,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "268:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$10_memory",
                          "typeString": "struct ToDo.Task memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Task_$10_memory",
                          "typeString": "struct ToDo.Task memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 20,
                        "name": "tasks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "257:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Task_$10_storage_$dyn_storage",
                          "typeString": "struct ToDo.Task storage ref[] storage ref"
                        }
                      },
                      "id": 22,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "257:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Task_$10_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct ToDo.Task storage ref) returns (uint256)"
                      }
                    },
                    "id": 30,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "257:56:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 31,
                  "nodeType": "ExpressionStatement",
                  "src": "257:56:0"
                }
              ]
            },
            "documentation": null,
            "id": 33,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createTask",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "name": "_description",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "195:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "195:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "223:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "223:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "194:49:0"
            },
            "returnParameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "251:0:0"
            },
            "scope": 121,
            "src": "175:143:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 45,
              "nodeType": "Block",
              "src": "359:35:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 43,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 38,
                          "name": "tasks",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "365:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Task_$10_storage_$dyn_storage",
                            "typeString": "struct ToDo.Task storage ref[] storage ref"
                          }
                        },
                        "id": 40,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 39,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35,
                          "src": "371:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "365:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$10_storage",
                          "typeString": "struct ToDo.Task storage ref"
                        }
                      },
                      "id": 41,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7,
                      "src": "365:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 42,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "385:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "365:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44,
                  "nodeType": "ExpressionStatement",
                  "src": "365:24:0"
                }
              ]
            },
            "documentation": null,
            "id": 46,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkTask",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 46,
                  "src": "341:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "341:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "340:11:0"
            },
            "returnParameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "359:0:0"
            },
            "scope": 121,
            "src": "322:72:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 52,
              "nodeType": "Block",
              "src": "427:23:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "433:12:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 49,
                      "name": "tasks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "440:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Task_$10_storage_$dyn_storage",
                        "typeString": "struct ToDo.Task storage ref[] storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
                  "src": "433:12:0"
                }
              ]
            },
            "documentation": null,
            "id": 53,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cleanTasks",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "417:2:0"
            },
            "returnParameters": {
              "id": 48,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "427:0:0"
            },
            "scope": 121,
            "src": "398:52:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 61,
              "nodeType": "Block",
              "src": "511:23:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 59,
                    "name": "tasks",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13,
                    "src": "524:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Task_$10_storage_$dyn_storage",
                      "typeString": "struct ToDo.Task storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 58,
                  "id": 60,
                  "nodeType": "Return",
                  "src": "517:12:0"
                }
              ]
            },
            "documentation": null,
            "id": 62,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTasks",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "473:2:0"
            },
            "returnParameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "496:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Task_$10_memory_$dyn_memory_ptr",
                    "typeString": "struct ToDo.Task[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 55,
                      "name": "Task",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 10,
                      "src": "496:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$10_storage_ptr",
                        "typeString": "struct ToDo.Task"
                      }
                    },
                    "id": 56,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "496:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Task_$10_storage_$dyn_storage_ptr",
                      "typeString": "struct ToDo.Task[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "495:15:0"
            },
            "scope": 121,
            "src": "456:78:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 119,
              "nodeType": "Block",
              "src": "615:252:0",
              "statements": [
                {
                  "assignments": [
                    73
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 73,
                      "name": "result",
                      "nodeType": "VariableDeclaration",
                      "scope": 119,
                      "src": "621:20:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Task_$10_memory_$dyn_memory_ptr",
                        "typeString": "struct ToDo.Task[]"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 71,
                          "name": "Task",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 10,
                          "src": "621:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$10_storage_ptr",
                            "typeString": "struct ToDo.Task"
                          }
                        },
                        "id": 72,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "621:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Task_$10_storage_$dyn_storage_ptr",
                          "typeString": "struct ToDo.Task[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 80,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 77,
                          "name": "tasks",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "655:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Task_$10_storage_$dyn_storage",
                            "typeString": "struct ToDo.Task storage ref[] storage ref"
                          }
                        },
                        "id": 78,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "655:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 76,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "644:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Task_$10_memory_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (struct ToDo.Task memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 74,
                          "name": "Task",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 10,
                          "src": "648:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$10_storage_ptr",
                            "typeString": "struct ToDo.Task"
                          }
                        },
                        "id": 75,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "648:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Task_$10_storage_$dyn_storage_ptr",
                          "typeString": "struct ToDo.Task[]"
                        }
                      }
                    },
                    "id": 79,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "644:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Task_$10_memory_$dyn_memory",
                      "typeString": "struct ToDo.Task memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "621:47:0"
                },
                {
                  "assignments": [
                    82
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 82,
                      "name": "counter",
                      "nodeType": "VariableDeclaration",
                      "scope": 119,
                      "src": "674:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 81,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "674:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 84,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "689:1:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "674:16:0"
                },
                {
                  "body": {
                    "id": 115,
                    "nodeType": "Block",
                    "src": "736:107:0",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 96,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "748:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 97,
                                "name": "tasks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13,
                                "src": "757:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Task_$10_storage_$dyn_storage",
                                  "typeString": "struct ToDo.Task storage ref[] storage ref"
                                }
                              },
                              "id": 99,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 98,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86,
                                "src": "763:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "757:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$10_storage",
                                "typeString": "struct ToDo.Task storage ref"
                              }
                            },
                            "id": 100,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9,
                            "src": "757:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "748:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 114,
                        "nodeType": "IfStatement",
                        "src": "744:93:0",
                        "trueBody": {
                          "id": 113,
                          "nodeType": "Block",
                          "src": "773:64:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 108,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 102,
                                    "name": "result",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 73,
                                    "src": "783:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Task_$10_memory_$dyn_memory_ptr",
                                      "typeString": "struct ToDo.Task memory[] memory"
                                    }
                                  },
                                  "id": 104,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 103,
                                    "name": "counter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 82,
                                    "src": "790:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "783:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$10_memory",
                                    "typeString": "struct ToDo.Task memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 105,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13,
                                    "src": "801:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Task_$10_storage_$dyn_storage",
                                      "typeString": "struct ToDo.Task storage ref[] storage ref"
                                    }
                                  },
                                  "id": 107,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 106,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 86,
                                    "src": "807:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "801:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$10_storage",
                                    "typeString": "struct ToDo.Task storage ref"
                                  }
                                },
                                "src": "783:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$10_memory",
                                  "typeString": "struct ToDo.Task memory"
                                }
                              },
                              "id": 109,
                              "nodeType": "ExpressionStatement",
                              "src": "783:26:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 111,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "819:9:0",
                                "subExpression": {
                                  "argumentTypes": null,
                                  "id": 110,
                                  "name": "counter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 82,
                                  "src": "819:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 112,
                              "nodeType": "ExpressionStatement",
                              "src": "819:9:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 89,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86,
                      "src": "713:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 90,
                        "name": "tasks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "717:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Task_$10_storage_$dyn_storage",
                          "typeString": "struct ToDo.Task storage ref[] storage ref"
                        }
                      },
                      "id": 91,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "717:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "713:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 116,
                  "initializationExpression": {
                    "assignments": [
                      86
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 86,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 116,
                        "src": "701:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 85,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "701:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 88,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 87,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "710:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "701:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 94,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "731:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 93,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "731:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 95,
                    "nodeType": "ExpressionStatement",
                    "src": "731:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "696:147:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 117,
                    "name": "result",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 73,
                    "src": "856:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Task_$10_memory_$dyn_memory_ptr",
                      "typeString": "struct ToDo.Task memory[] memory"
                    }
                  },
                  "functionReturnParameters": 69,
                  "id": 118,
                  "nodeType": "Return",
                  "src": "849:13:0"
                }
              ]
            },
            "documentation": null,
            "id": 120,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTasksByOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "563:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "563:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "562:15:0"
            },
            "returnParameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "600:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Task_$10_memory_$dyn_memory_ptr",
                    "typeString": "struct ToDo.Task[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 66,
                      "name": "Task",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 10,
                      "src": "600:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$10_storage_ptr",
                        "typeString": "struct ToDo.Task"
                      }
                    },
                    "id": 67,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "600:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Task_$10_storage_$dyn_storage_ptr",
                      "typeString": "struct ToDo.Task[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "599:15:0"
            },
            "scope": 121,
            "src": "538:329:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 122,
        "src": "35:838:0"
      }
    ],
    "src": "0:873:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/src/contracts/ToDo.sol",
      "exportedSymbols": {
        "ToDo": [
          121
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "0:33:0"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            121
          ],
          "name": "ToDo",
          "scope": 122
        },
        "children": [
          {
            "attributes": {
              "canonicalName": "ToDo.Task",
              "name": "Task",
              "scope": 121,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "description",
                  "scope": 10,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 2,
                    "name": "ElementaryTypeName",
                    "src": "71:6:0"
                  }
                ],
                "id": 3,
                "name": "VariableDeclaration",
                "src": "71:18:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "user",
                  "scope": 10,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 4,
                    "name": "ElementaryTypeName",
                    "src": "95:6:0"
                  }
                ],
                "id": 5,
                "name": "VariableDeclaration",
                "src": "95:11:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "status",
                  "scope": 10,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bool",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 6,
                    "name": "ElementaryTypeName",
                    "src": "112:4:0"
                  }
                ],
                "id": 7,
                "name": "VariableDeclaration",
                "src": "112:11:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "owner",
                  "scope": 10,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 8,
                    "name": "ElementaryTypeName",
                    "src": "129:7:0"
                  }
                ],
                "id": 9,
                "name": "VariableDeclaration",
                "src": "129:13:0"
              }
            ],
            "id": 10,
            "name": "StructDefinition",
            "src": "53:94:0"
          },
          {
            "attributes": {
              "constant": false,
              "name": "tasks",
              "scope": 121,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "struct ToDo.Task[]",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "length": null,
                  "type": "struct ToDo.Task[]"
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Task",
                      "referencedDeclaration": 10,
                      "type": "struct ToDo.Task"
                    },
                    "id": 11,
                    "name": "UserDefinedTypeName",
                    "src": "151:4:0"
                  }
                ],
                "id": 12,
                "name": "ArrayTypeName",
                "src": "151:6:0"
              }
            ],
            "id": 13,
            "name": "VariableDeclaration",
            "src": "151:19:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "createTask",
              "scope": 121,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_description",
                      "scope": 33,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 14,
                        "name": "ElementaryTypeName",
                        "src": "195:6:0"
                      }
                    ],
                    "id": 15,
                    "name": "VariableDeclaration",
                    "src": "195:26:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_user",
                      "scope": 33,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 16,
                        "name": "ElementaryTypeName",
                        "src": "223:6:0"
                      }
                    ],
                    "id": 17,
                    "name": "VariableDeclaration",
                    "src": "223:19:0"
                  }
                ],
                "id": 18,
                "name": "ParameterList",
                "src": "194:49:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 19,
                "name": "ParameterList",
                "src": "251:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Task_$10_memory",
                                  "typeString": "struct ToDo.Task memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "referencedDeclaration": null,
                              "type": "function (struct ToDo.Task storage ref) returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 13,
                                  "type": "struct ToDo.Task storage ref[] storage ref",
                                  "value": "tasks"
                                },
                                "id": 20,
                                "name": "Identifier",
                                "src": "257:5:0"
                              }
                            ],
                            "id": 22,
                            "name": "MemberAccess",
                            "src": "257:10:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "struct ToDo.Task memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10,
                                  "type": "type(struct ToDo.Task storage pointer)",
                                  "value": "Task"
                                },
                                "id": 23,
                                "name": "Identifier",
                                "src": "268:4:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 15,
                                  "type": "string memory",
                                  "value": "_description"
                                },
                                "id": 24,
                                "name": "Identifier",
                                "src": "273:12:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 17,
                                  "type": "string memory",
                                  "value": "_user"
                                },
                                "id": 25,
                                "name": "Identifier",
                                "src": "287:5:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "66616c7365",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "false"
                                },
                                "id": 26,
                                "name": "Literal",
                                "src": "294:5:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 136,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 27,
                                    "name": "Identifier",
                                    "src": "301:3:0"
                                  }
                                ],
                                "id": 28,
                                "name": "MemberAccess",
                                "src": "301:10:0"
                              }
                            ],
                            "id": 29,
                            "name": "FunctionCall",
                            "src": "268:44:0"
                          }
                        ],
                        "id": 30,
                        "name": "FunctionCall",
                        "src": "257:56:0"
                      }
                    ],
                    "id": 31,
                    "name": "ExpressionStatement",
                    "src": "257:56:0"
                  }
                ],
                "id": 32,
                "name": "Block",
                "src": "251:67:0"
              }
            ],
            "id": 33,
            "name": "FunctionDefinition",
            "src": "175:143:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "checkTask",
              "scope": 121,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_id",
                      "scope": 46,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint8",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint8",
                          "type": "uint8"
                        },
                        "id": 34,
                        "name": "ElementaryTypeName",
                        "src": "341:5:0"
                      }
                    ],
                    "id": 35,
                    "name": "VariableDeclaration",
                    "src": "341:9:0"
                  }
                ],
                "id": 36,
                "name": "ParameterList",
                "src": "340:11:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 37,
                "name": "ParameterList",
                "src": "359:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "status",
                              "referencedDeclaration": 7,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct ToDo.Task storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 13,
                                      "type": "struct ToDo.Task storage ref[] storage ref",
                                      "value": "tasks"
                                    },
                                    "id": 38,
                                    "name": "Identifier",
                                    "src": "365:5:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 35,
                                      "type": "uint8",
                                      "value": "_id"
                                    },
                                    "id": 39,
                                    "name": "Identifier",
                                    "src": "371:3:0"
                                  }
                                ],
                                "id": 40,
                                "name": "IndexAccess",
                                "src": "365:10:0"
                              }
                            ],
                            "id": 41,
                            "name": "MemberAccess",
                            "src": "365:17:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 42,
                            "name": "Literal",
                            "src": "385:4:0"
                          }
                        ],
                        "id": 43,
                        "name": "Assignment",
                        "src": "365:24:0"
                      }
                    ],
                    "id": 44,
                    "name": "ExpressionStatement",
                    "src": "365:24:0"
                  }
                ],
                "id": 45,
                "name": "Block",
                "src": "359:35:0"
              }
            ],
            "id": 46,
            "name": "FunctionDefinition",
            "src": "322:72:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "cleanTasks",
              "scope": 121,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 47,
                "name": "ParameterList",
                "src": "417:2:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 48,
                "name": "ParameterList",
                "src": "427:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "delete",
                          "prefix": true,
                          "type": "tuple()"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 13,
                              "type": "struct ToDo.Task storage ref[] storage ref",
                              "value": "tasks"
                            },
                            "id": 49,
                            "name": "Identifier",
                            "src": "440:5:0"
                          }
                        ],
                        "id": 50,
                        "name": "UnaryOperation",
                        "src": "433:12:0"
                      }
                    ],
                    "id": 51,
                    "name": "ExpressionStatement",
                    "src": "433:12:0"
                  }
                ],
                "id": 52,
                "name": "Block",
                "src": "427:23:0"
              }
            ],
            "id": 53,
            "name": "FunctionDefinition",
            "src": "398:52:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getTasks",
              "scope": 121,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 54,
                "name": "ParameterList",
                "src": "473:2:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 62,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct ToDo.Task[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "struct ToDo.Task[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Task",
                              "referencedDeclaration": 10,
                              "type": "struct ToDo.Task"
                            },
                            "id": 55,
                            "name": "UserDefinedTypeName",
                            "src": "496:4:0"
                          }
                        ],
                        "id": 56,
                        "name": "ArrayTypeName",
                        "src": "496:6:0"
                      }
                    ],
                    "id": 57,
                    "name": "VariableDeclaration",
                    "src": "496:13:0"
                  }
                ],
                "id": 58,
                "name": "ParameterList",
                "src": "495:15:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 58
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 13,
                          "type": "struct ToDo.Task storage ref[] storage ref",
                          "value": "tasks"
                        },
                        "id": 59,
                        "name": "Identifier",
                        "src": "524:5:0"
                      }
                    ],
                    "id": 60,
                    "name": "Return",
                    "src": "517:12:0"
                  }
                ],
                "id": 61,
                "name": "Block",
                "src": "511:23:0"
              }
            ],
            "id": 62,
            "name": "FunctionDefinition",
            "src": "456:78:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getTasksByOwner",
              "scope": 121,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "owner",
                      "scope": 120,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 63,
                        "name": "ElementaryTypeName",
                        "src": "563:7:0"
                      }
                    ],
                    "id": 64,
                    "name": "VariableDeclaration",
                    "src": "563:13:0"
                  }
                ],
                "id": 65,
                "name": "ParameterList",
                "src": "562:15:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 120,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct ToDo.Task[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "struct ToDo.Task[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Task",
                              "referencedDeclaration": 10,
                              "type": "struct ToDo.Task"
                            },
                            "id": 66,
                            "name": "UserDefinedTypeName",
                            "src": "600:4:0"
                          }
                        ],
                        "id": 67,
                        "name": "ArrayTypeName",
                        "src": "600:6:0"
                      }
                    ],
                    "id": 68,
                    "name": "VariableDeclaration",
                    "src": "600:13:0"
                  }
                ],
                "id": 69,
                "name": "ParameterList",
                "src": "599:15:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        73
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "result",
                          "scope": 119,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct ToDo.Task[]",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "length": null,
                              "type": "struct ToDo.Task[]"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "contractScope": null,
                                  "name": "Task",
                                  "referencedDeclaration": 10,
                                  "type": "struct ToDo.Task"
                                },
                                "id": 71,
                                "name": "UserDefinedTypeName",
                                "src": "621:4:0"
                              }
                            ],
                            "id": 72,
                            "name": "ArrayTypeName",
                            "src": "621:6:0"
                          }
                        ],
                        "id": 73,
                        "name": "VariableDeclaration",
                        "src": "621:20:0"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "struct ToDo.Task memory[] memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "type": "function (uint256) pure returns (struct ToDo.Task memory[] memory)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "length": null,
                                  "type": "struct ToDo.Task[]"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "contractScope": null,
                                      "name": "Task",
                                      "referencedDeclaration": 10,
                                      "type": "struct ToDo.Task"
                                    },
                                    "id": 74,
                                    "name": "UserDefinedTypeName",
                                    "src": "648:4:0"
                                  }
                                ],
                                "id": 75,
                                "name": "ArrayTypeName",
                                "src": "648:6:0"
                              }
                            ],
                            "id": 76,
                            "name": "NewExpression",
                            "src": "644:10:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 13,
                                  "type": "struct ToDo.Task storage ref[] storage ref",
                                  "value": "tasks"
                                },
                                "id": 77,
                                "name": "Identifier",
                                "src": "655:5:0"
                              }
                            ],
                            "id": 78,
                            "name": "MemberAccess",
                            "src": "655:12:0"
                          }
                        ],
                        "id": 79,
                        "name": "FunctionCall",
                        "src": "644:24:0"
                      }
                    ],
                    "id": 80,
                    "name": "VariableDeclarationStatement",
                    "src": "621:47:0"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        82
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "counter",
                          "scope": 119,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 81,
                            "name": "ElementaryTypeName",
                            "src": "674:4:0"
                          }
                        ],
                        "id": 82,
                        "name": "VariableDeclaration",
                        "src": "674:12:0"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "30",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "number",
                          "type": "int_const 0",
                          "value": "0"
                        },
                        "id": 83,
                        "name": "Literal",
                        "src": "689:1:0"
                      }
                    ],
                    "id": 84,
                    "name": "VariableDeclarationStatement",
                    "src": "674:16:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            86
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "name": "i",
                              "scope": 116,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "value": null,
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint",
                                  "type": "uint256"
                                },
                                "id": 85,
                                "name": "ElementaryTypeName",
                                "src": "701:4:0"
                              }
                            ],
                            "id": 86,
                            "name": "VariableDeclaration",
                            "src": "701:6:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 87,
                            "name": "Literal",
                            "src": "710:1:0"
                          }
                        ],
                        "id": 88,
                        "name": "VariableDeclarationStatement",
                        "src": "701:10:0"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 86,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 89,
                            "name": "Identifier",
                            "src": "713:1:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 13,
                                  "type": "struct ToDo.Task storage ref[] storage ref",
                                  "value": "tasks"
                                },
                                "id": 90,
                                "name": "Identifier",
                                "src": "717:5:0"
                              }
                            ],
                            "id": 91,
                            "name": "MemberAccess",
                            "src": "717:12:0"
                          }
                        ],
                        "id": 92,
                        "name": "BinaryOperation",
                        "src": "713:16:0"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 86,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 93,
                                "name": "Identifier",
                                "src": "731:1:0"
                              }
                            ],
                            "id": 94,
                            "name": "UnaryOperation",
                            "src": "731:3:0"
                          }
                        ],
                        "id": 95,
                        "name": "ExpressionStatement",
                        "src": "731:3:0"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "falseBody": null
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "==",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 64,
                                      "type": "address",
                                      "value": "owner"
                                    },
                                    "id": 96,
                                    "name": "Identifier",
                                    "src": "748:5:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "owner",
                                      "referencedDeclaration": 9,
                                      "type": "address"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct ToDo.Task storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 13,
                                              "type": "struct ToDo.Task storage ref[] storage ref",
                                              "value": "tasks"
                                            },
                                            "id": 97,
                                            "name": "Identifier",
                                            "src": "757:5:0"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 86,
                                              "type": "uint256",
                                              "value": "i"
                                            },
                                            "id": 98,
                                            "name": "Identifier",
                                            "src": "763:1:0"
                                          }
                                        ],
                                        "id": 99,
                                        "name": "IndexAccess",
                                        "src": "757:8:0"
                                      }
                                    ],
                                    "id": 100,
                                    "name": "MemberAccess",
                                    "src": "757:14:0"
                                  }
                                ],
                                "id": 101,
                                "name": "BinaryOperation",
                                "src": "748:23:0"
                              },
                              {
                                "children": [
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "=",
                                          "type": "struct ToDo.Task memory"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "type": "struct ToDo.Task memory"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 73,
                                                  "type": "struct ToDo.Task memory[] memory",
                                                  "value": "result"
                                                },
                                                "id": 102,
                                                "name": "Identifier",
                                                "src": "783:6:0"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 82,
                                                  "type": "uint256",
                                                  "value": "counter"
                                                },
                                                "id": 103,
                                                "name": "Identifier",
                                                "src": "790:7:0"
                                              }
                                            ],
                                            "id": 104,
                                            "name": "IndexAccess",
                                            "src": "783:15:0"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct ToDo.Task storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 13,
                                                  "type": "struct ToDo.Task storage ref[] storage ref",
                                                  "value": "tasks"
                                                },
                                                "id": 105,
                                                "name": "Identifier",
                                                "src": "801:5:0"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 86,
                                                  "type": "uint256",
                                                  "value": "i"
                                                },
                                                "id": 106,
                                                "name": "Identifier",
                                                "src": "807:1:0"
                                              }
                                            ],
                                            "id": 107,
                                            "name": "IndexAccess",
                                            "src": "801:8:0"
                                          }
                                        ],
                                        "id": 108,
                                        "name": "Assignment",
                                        "src": "783:26:0"
                                      }
                                    ],
                                    "id": 109,
                                    "name": "ExpressionStatement",
                                    "src": "783:26:0"
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "++",
                                          "prefix": false,
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 82,
                                              "type": "uint256",
                                              "value": "counter"
                                            },
                                            "id": 110,
                                            "name": "Identifier",
                                            "src": "819:7:0"
                                          }
                                        ],
                                        "id": 111,
                                        "name": "UnaryOperation",
                                        "src": "819:9:0"
                                      }
                                    ],
                                    "id": 112,
                                    "name": "ExpressionStatement",
                                    "src": "819:9:0"
                                  }
                                ],
                                "id": 113,
                                "name": "Block",
                                "src": "773:64:0"
                              }
                            ],
                            "id": 114,
                            "name": "IfStatement",
                            "src": "744:93:0"
                          }
                        ],
                        "id": 115,
                        "name": "Block",
                        "src": "736:107:0"
                      }
                    ],
                    "id": 116,
                    "name": "ForStatement",
                    "src": "696:147:0"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 69
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 73,
                          "type": "struct ToDo.Task memory[] memory",
                          "value": "result"
                        },
                        "id": 117,
                        "name": "Identifier",
                        "src": "856:6:0"
                      }
                    ],
                    "id": 118,
                    "name": "Return",
                    "src": "849:13:0"
                  }
                ],
                "id": 119,
                "name": "Block",
                "src": "615:252:0"
              }
            ],
            "id": 120,
            "name": "FunctionDefinition",
            "src": "538:329:0"
          }
        ],
        "id": 121,
        "name": "ContractDefinition",
        "src": "35:838:0"
      }
    ],
    "id": 122,
    "name": "SourceUnit",
    "src": "0:873:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "1648980848660": {
      "events": {},
      "links": {},
      "address": "0xb09bCc172050fBd4562da8b229Cf3E45Dc3045A6",
      "transactionHash": "0x0e3b337e29b5705bb628c750ef4e2d0eb7e8dc485685ff79d206759a8f90253a"
    },
    "1648983666495": {
      "events": {},
      "links": {},
      "address": "0x734Fc3BeB0f8F11D94048c125Bc1b218B09a9c44",
      "transactionHash": "0x0bccf44bfc2069c73c82ff044a0a7cdd89b39ce5afc1134a909446954ea53df3"
    },
    "1648995768935": {
      "events": {},
      "links": {},
      "address": "0xDb56f2e9369E0D7bD191099125a3f6C370F8ed15",
      "transactionHash": "0x51a21bcc5d953384b6fe8d6e0e993e1e8266c42b19ba89f21b9e8b4c1c731240"
    },
    "1649185141211": {
      "events": {},
      "links": {},
      "address": "0xCfEB869F69431e42cdB54A4F4f105C19C080A601",
      "transactionHash": "0x99817c62074bb43b8b0ee6db8d7bfa296cbc366cc2b06c6ce440b3f12b13e9c4"
    },
    "1649188078171": {
      "events": {},
      "links": {},
      "address": "0x254dffcd3277C0b1660F6d42EFbB754edaBAbC2B",
      "transactionHash": "0x27fcd36f9ab09c0962c8774c406461b788c69467d4884652238419ca701b52be"
    },
    "1649208650500": {
      "events": {},
      "links": {},
      "address": "0xd0fef44a2f2467429f8620444aDAdD37247114EF",
      "transactionHash": "0x1e8484b1639c94a19ed74eab4eaffd4f62d0ba14a5d65dfa003131098f894d02"
    }
  },
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-04-06T22:35:43.259Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}